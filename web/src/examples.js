let u = s => s.replace(/, /g, '\n');

let hamming = u('3*11 % 2^2*5, 5 % 11, 13 % 2*5, 1 % 5, 2 % 3, 2*5 % 7, 7 % 2');


let examples = {
  'Hamming weight (small)': {
    input: '[2, 1100001b]',
    program: hamming
  },
  'Hamming weight (large)': {
    input: '[2, 2^256-1]',
    program: hamming
  },
  'Add two numbers': {
    input: '[2, 123], [3, 111]',
    program: u('5 % 2, 5 % 3')
  },
  'Multiply two numbers': {
    input: '[2, 500], [3, 600]',
    program: u('455 % 33, 11 % 13, 1 % 11, 3 % 7, 11 % 2, 1 % 3')
  },
  'Infinite loop': {
    input: '2',
    program: u('2 % 3, 3 % 2')
  },
/* should be 3/2 run on input 2^1? doesn't work
  'Lomont\'s self-interpreter': {
    input: '[5, 1], [7, 2], [67, 4355]',
    program:
`5 % 19, 61^10*23*19 % 67^11*5, 37 % 67^10*5, 47^10*19 % 41*5,
61*47*19 % 67*5, 43 % 5, 43 % 71, 41*71 % 47*43,
61^10*67*71 % 23^11*43, 61^10*31 % 23^10*43, 47^10*71 % 13*43,
61*47*71 % 23*43, 17 % 43, 17 % 29, 13*29 % 47*17, 5 % 17,
31 % 53, 11*23*53 % 7*41*31, 59 % 41*31, 59 % 73, 7*73 % 23*11*59,
73 % 41*59, 89 % 59, 47*79 % 31, 79 % 83, 41*83 % 23*79, 31 % 79,
97 % 7*89, 101 % 97, 7*97 % 11*101, 97 % 13*101, 97 % 47*101,
7*5 % 101, 103 % 13*89, 103 % 107, 7*23*107 % 47*103, 109 % 103,
109 % 113, 47*113 % 23*109, 103 % 13*109, 127 % 109, 127 % 131,
131 % 47*127, 131 % 11*127, 67*131 % 61*127, 2 % 127, 5 % 2,3 % 37`
  }*/
};

export default examples;