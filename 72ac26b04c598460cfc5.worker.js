!function(t){var e={};function s(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,s),r.l=!0,r.exports}s.m=t,s.c=e,s.d=function(t,e,i){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)s.d(i,r,function(e){return t[e]}.bind(null,r));return i},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=0)}([function(t,e,s){"use strict";s.r(e);var i={};function r(t){return Object.entries(Object.getOwnPropertyDescriptors(Object.getPrototypeOf(t))).reduce((e,[s,i])=>("constructor"===s||i.get||(e[s]=t[s].bind(t)),e),{})}s.r(i),s.d(i,"dataTag",(function(){return h})),s.d(i,"functionTag",(function(){return l})),s.d(i,"mblock_size",(function(){return m})),s.d(i,"mblock_size_log2",(function(){return f})),s.d(i,"block_size",(function(){return g})),s.d(i,"blocks_per_mblock",(function(){return d})),s.d(i,"offset_timespec_tv_sec",(function(){return b})),s.d(i,"offset_timespec_tv_nsec",(function(){return y})),s.d(i,"sizeof_bdescr",(function(){return _})),s.d(i,"offset_first_bdescr",(function(){return p})),s.d(i,"offset_first_block",(function(){return S})),s.d(i,"sizeof_first_mblock",(function(){return T})),s.d(i,"offset_bdescr_start",(function(){return I})),s.d(i,"offset_bdescr_free",(function(){return w})),s.d(i,"offset_bdescr_link",(function(){return B})),s.d(i,"offset_bdescr_gen_no",(function(){return v})),s.d(i,"offset_bdescr_node",(function(){return L})),s.d(i,"offset_bdescr_flags",(function(){return k})),s.d(i,"offset_bdescr_blocks",(function(){return E})),s.d(i,"BF_PINNED",(function(){return M})),s.d(i,"pageSize",(function(){return A})),s.d(i,"offset_Capability_r",(function(){return N})),s.d(i,"sizeof_StgAP",(function(){return P})),s.d(i,"offset_StgAP_arity",(function(){return F})),s.d(i,"offset_StgAP_n_args",(function(){return C})),s.d(i,"offset_StgAP_fun",(function(){return O})),s.d(i,"offset_StgAP_payload",(function(){return x})),s.d(i,"sizeof_StgAP_STACK",(function(){return V})),s.d(i,"offset_StgAP_STACK_size",(function(){return D})),s.d(i,"offset_StgAP_STACK_fun",(function(){return R})),s.d(i,"offset_StgAP_STACK_payload",(function(){return z})),s.d(i,"sizeof_StgArrBytes",(function(){return U})),s.d(i,"offset_StgArrBytes_bytes",(function(){return W})),s.d(i,"offset_StgFunInfoExtraFwd_fun_type",(function(){return j})),s.d(i,"offset_StgFunInfoExtraFwd_srt",(function(){return H})),s.d(i,"offset_StgFunInfoExtraFwd_b",(function(){return J})),s.d(i,"offset_StgFunInfoTable_i",(function(){return G})),s.d(i,"offset_StgFunInfoTable_f",(function(){return $})),s.d(i,"sizeof_StgInd",(function(){return X})),s.d(i,"offset_StgInd_indirectee",(function(){return q})),s.d(i,"sizeof_StgIndStatic",(function(){return K})),s.d(i,"offset_StgIndStatic_indirectee",(function(){return Y})),s.d(i,"offset_StgInfoTable_layout",(function(){return Z})),s.d(i,"offset_StgInfoTable_type",(function(){return Q})),s.d(i,"offset_StgInfoTable_srt",(function(){return tt})),s.d(i,"offset_StgLargeBitmap_size",(function(){return et})),s.d(i,"offset_StgLargeBitmap_bitmap",(function(){return st})),s.d(i,"sizeof_StgMutArrPtrs",(function(){return it})),s.d(i,"offset_StgMutArrPtrs_ptrs",(function(){return rt})),s.d(i,"offset_StgMutArrPtrs_payload",(function(){return nt})),s.d(i,"offset_StgMVar_head",(function(){return ot})),s.d(i,"offset_StgMVar_tail",(function(){return at})),s.d(i,"offset_StgMVar_value",(function(){return ct})),s.d(i,"sizeof_StgPAP",(function(){return ut})),s.d(i,"offset_StgPAP_arity",(function(){return ht})),s.d(i,"offset_StgPAP_n_args",(function(){return lt})),s.d(i,"offset_StgPAP_fun",(function(){return mt})),s.d(i,"offset_StgPAP_payload",(function(){return ft})),s.d(i,"offset_StgRegTable_rR1",(function(){return gt})),s.d(i,"offset_StgRegTable_rF1",(function(){return dt})),s.d(i,"offset_StgRegTable_rD1",(function(){return bt})),s.d(i,"offset_StgRegTable_rCurrentNursery",(function(){return yt})),s.d(i,"offset_StgRegTable_rHpAlloc",(function(){return _t})),s.d(i,"offset_StgRegTable_rRet",(function(){return pt})),s.d(i,"sizeof_StgRetFun",(function(){return St})),s.d(i,"offset_StgRetFun_size",(function(){return Tt})),s.d(i,"offset_StgRetFun_fun",(function(){return It})),s.d(i,"offset_StgRetFun_payload",(function(){return wt})),s.d(i,"offset_StgRetInfoTable_i",(function(){return Bt})),s.d(i,"offset_StgRetInfoTable_srt",(function(){return vt})),s.d(i,"sizeof_StgSelector",(function(){return Lt})),s.d(i,"offset_StgSelector_selectee",(function(){return kt})),s.d(i,"sizeof_StgSmallMutArrPtrs",(function(){return Et})),s.d(i,"offset_StgSmallMutArrPtrs_ptrs",(function(){return Mt})),s.d(i,"offset_StgSmallMutArrPtrs_payload",(function(){return At})),s.d(i,"sizeof_StgThunk",(function(){return Nt})),s.d(i,"offset_StgThunk_payload",(function(){return Pt})),s.d(i,"offset_StgThunkInfoTable_i",(function(){return Ft})),s.d(i,"offset_StgThunkInfoTable_srt",(function(){return Ct})),s.d(i,"offset_StgTSO_id",(function(){return Ot})),s.d(i,"offset_StgTSO_stackobj",(function(){return xt})),s.d(i,"offset_StgTSO_what_next",(function(){return Vt})),s.d(i,"offset_StgTSO_why_blocked",(function(){return Dt})),s.d(i,"offset_StgTSO_block_info",(function(){return Rt})),s.d(i,"offset_StgStack_stack_size",(function(){return zt})),s.d(i,"offset_StgStack_sp",(function(){return Ut})),s.d(i,"offset_StgStack_stack",(function(){return Wt})),s.d(i,"offset_StgUpdateFrame_updatee",(function(){return jt})),s.d(i,"offset_StgWeak_cfinalizers",(function(){return Ht})),s.d(i,"offset_StgWeak_key",(function(){return Jt})),s.d(i,"offset_StgWeak_value",(function(){return Gt})),s.d(i,"offset_StgWeak_finalizer",(function(){return $t})),s.d(i,"offset_StgWeak_link",(function(){return Xt})),s.d(i,"sizeof_StgStableName",(function(){return qt})),s.d(i,"offset_StgStableName_header",(function(){return Kt})),s.d(i,"offset_StgStableName_sn",(function(){return Yt})),s.d(i,"offset_stat_mtime",(function(){return Zt})),s.d(i,"offset_stat_size",(function(){return Qt})),s.d(i,"offset_stat_mode",(function(){return te})),s.d(i,"offset_stat_dev",(function(){return ee})),s.d(i,"offset_stat_ino",(function(){return se})),s.d(i,"clock_monotonic",(function(){return ie})),s.d(i,"clock_realtime",(function(){return re})),s.d(i,"hsTyCons",(function(){return ne}));class n{constructor(t){this.names=t,this.flags=this.names.map(()=>!1),Object.freeze(this)}enter(t){if(this.flags[t])throw new WebAssembly.RuntimeError(`ReentrancyGuard: ${this.names[t]} reentered!`);this.flags[t]=!0}exit(t){this.flags[t]=!1}}class o{constructor(t,e){this.time=new Date,this.level=t,this.event=e,Object.freeze(this)}}class a{constructor(t){this.symbolTable=t,this.events=[],this.enabled=!0,this.onEvent=()=>{},Object.seal(this)}isEnabled(){return this.enabled}setEnabled(t){this.enabled=Boolean(t)}log(t,e){if(this.enabled){const s=new o(t,e);this.events.push(s),this.onEvent(s)}}logInfo(t){this.log("INFO",t)}logError(t){this.log("ERROR",t)}logEvent(t){this.log("EVENT",t)}}class c{constructor(t,e){this.logger=t,this.symbolLookupTable={};for(const[t,s]of Object.entries(e))this.symbolLookupTable[s]=t;Object.freeze(this)}traceCmm(t){this.logger.logInfo(["call",t,this.symbolLookupTable[t]])}traceCmmBlock(t,e){this.logger.logInfo(["br",t,this.symbolLookupTable[t],e])}traceCmmSetLocal(t,e,s){this.logger.logInfo(["set_local",t,this.symbolLookupTable[t],e,s,this.symbolLookupTable[s]])}}const h=2097143,l=2097133,m=1048576,f=20,g=4096,d=252,b=0,y=8,_=64,p=256,S=16384,T=1032192,I=0,w=8,B=16,v=40,L=44,k=46,E=48,M=4,A=65536,N=24,P=32,F=16,C=20,O=24,x=32,V=32,D=16,R=24,z=32,U=16,W=8,j=0,H=8,J=16,G=0,$=24,X=16,q=8,K=32,Y=8,Z=8,Q=16,tt=20,et=0,st=8,it=24,rt=8,nt=24,ot=8,at=16,ct=24,ut=24,ht=8,lt=12,mt=16,ft=24,gt=0,dt=80,bt=104,yt=888,_t=904,pt=912,St=24,Tt=8,It=16,wt=24,Bt=0,vt=24,Lt=24,kt=16,Et=16,Mt=8,At=16,Nt=16,Pt=16,Ft=0,Ct=24,Ot=48,xt=24,Vt=32,Dt=34,Rt=40,zt=8,Ut=16,Wt=24,jt=8,Ht=8,Jt=16,Gt=24,$t=32,Xt=40,qt=16,Kt=0,Yt=8,Zt=88,Qt=48,te=24,ee=0,se=8,ie=1,re=0,ne=["JSVal","Bool","Char","Double","Float","Int","Int8","Int16","Int32","Int64","Word","Word8","Word16","Word32","Word64","StablePtr","Ptr","FunPtr"];function oe(t){return(BigInt(1)<<BigInt(t))-BigInt(1)}class ae{constructor(){this.memory=void 0,this.staticMBlocks=void 0,this.i8View=void 0,this.dataView=void 0,this.capacity=void 0,this.liveBitset=void 0,Object.seal(this)}init(t,e){this.memory=t,this.staticMBlocks=e,this.initView(),this.capacity=this.buffer.byteLength/m,this.liveBitset=oe(this.capacity)}initView(){this.i8View=new Uint8Array(this.memory.buffer),this.dataView=new DataView(this.memory.buffer)}static unTag(t){return 4294967295&Number(t)}static getTag(t){return Math.floor(Number(t)/2**32)}static tagData(t){return h*2**32+Number(t)}static tagFunction(t){return l*2**32+Number(t)}static unDynTag(t){const e=Number(t);return e-(7&e)}static getDynTag(t){return 7&Number(t)}static setDynTag(t,e){const s=Number(t);return s-(7&s)+e}get buffer(){return this.memory.buffer}grow(t){const e=this.memory.grow(t);return this.initView(),e}i8Load(t){return this.i8View[ae.unTag(t)]}i8Store(t,e){this.i8View[ae.unTag(t)]=Number(e)}i16Load(t){return this.dataView.getUint16(ae.unTag(t),!0)}i16Store(t,e){this.dataView.setUint16(ae.unTag(t),Number(e),!0)}i32Load(t){return this.dataView.getUint32(ae.unTag(t),!0)}i32Store(t,e){this.dataView.setUint32(ae.unTag(t),Number(e),!0)}i64Load(t){return this.dataView.getBigUint64(ae.unTag(t),!0)}i64Store(t,e){this.dataView.setBigUint64(ae.unTag(t),BigInt(e),!0)}f32Load(t){return this.dataView.getFloat32(ae.unTag(t),!0)}f32Store(t,e){this.dataView.setFloat32(ae.unTag(t),Number(e),!0)}f64Load(t){return this.dataView.getFloat64(ae.unTag(t),!0)}f64Store(t,e){this.dataView.setFloat64(ae.unTag(t),Number(e),!0)}i32LoadS8(t){return this.dataView.getInt8(ae.unTag(t))}i32LoadU8(t){return this.dataView.getUint8(ae.unTag(t))}i32LoadS16(t){return this.dataView.getInt16(ae.unTag(t),!0)}i32LoadU16(t){return this.dataView.getUint16(ae.unTag(t),!0)}i64LoadS8(t){return BigInt(this.dataView.getInt8(ae.unTag(t)))}i64LoadU8(t){return BigInt(this.dataView.getUint8(ae.unTag(t)))}i64LoadS16(t){return BigInt(this.dataView.getInt16(ae.unTag(t),!0))}i64LoadU16(t){return BigInt(this.dataView.getUint16(ae.unTag(t),!0))}heapAlloced(t){return ae.unTag(t)>=this.staticMBlocks<<f}getMBlocks(t){const e=oe(t);for(let s=BigInt(0);s<=BigInt(this.capacity-t);++s){const t=e<<s;if(!(this.liveBitset&t))return this.liveBitset|=t,ae.tagData(Number(s)*m)}const s=Math.max(t,this.capacity),i=this.capacity;return this.grow(s*(m/A)),this.capacity+=s,this.liveBitset|=e<<BigInt(i),ae.tagData(i*m)}freeMBlocks(t,e){const s=BigInt(ae.unTag(t))>>BigInt(f);this.liveBitset&=~(oe(e)<<s)}expose(t,e,s){return new s(this.memory.buffer,ae.unTag(t),e)}strlen(t){return this.i8View.subarray(ae.unTag(t)).indexOf(0)}strLoad(t){let e=ae.unTag(t),s="",i=0;for(;;){let t=this.i8View[e+i];if(0==t)return s;s+=String.fromCharCode(t),i++}}memchr(t,e,s){const i=ae.unTag(t),r=this.i8View.subarray(i,i+s).indexOf(e);return-1===r?0:t+r}memcpy(t,e,s){this.i8View.copyWithin(ae.unTag(t),ae.unTag(e),ae.unTag(e)+s)}memmove(t,e,s){return this.memcpy(t,e,s)}memset(t,e,s,i=1){const r={1:Uint8Array,2:Uint16Array,4:Uint32Array,8:BigUint64Array},n=this.expose(t,s,r[i]);8===i?n.fill(BigInt(e)):n.fill(e)}memsetFloat32(t,e,s){this.expose(t,s,Float32Array).fill(e)}memsetFloat64(t,e,s){this.expose(t,s,Float64Array).fill(e)}memcmp(t,e,s){for(let i=0;i<s;++i){const s=Math.sign(this.i8View[ae.unTag(t)+i]-this.i8View[ae.unTag(e)+i]);if(s)return s}return 0}}class ce{constructor(t,e,s){this.logger=t,this.symbolLookupTable=new Map;for(const[t,s]of Object.entries(e))this.symbolLookupTable.set(s,t);this.memory=s,Object.freeze(this)}trap(t,e){const s=ae.getTag(e),i=BigInt(ae.unTag(e))>>BigInt(f),r=Boolean(this.memory.liveBitset>>i&BigInt(1));if(s!=h||!r){const s=new WebAssembly.RuntimeError(`Invalid address ${n=e,"0x"+n.toString(16)} accessed in ${this.symbolLookupTable.get(Number(t))}`);throw this.logger.logError(s),s}var n}loadI8(t,e,s){const i=e+BigInt(s);return this.trap(t,i),this.memory.i8Load(i)}loadI16(t,e,s){const i=e+BigInt(s);return this.trap(t,i),this.memory.i16Load(i)}loadI32(t,e,s){const i=e+BigInt(s);return this.trap(t,i),this.memory.i32Load(i)}loadI64(t,e,s){const i=e+BigInt(s);return this.trap(t,i),this.memory.i64Load(i)}loadI32S8(t,e,s){const i=e+BigInt(s);return this.trap(t,i),this.memory.i32LoadS8(i)}loadI32U8(t,e,s){const i=e+BigInt(s);return this.trap(t,i),this.memory.i32LoadU8(i)}loadI32S16(t,e,s){const i=e+BigInt(s);return this.trap(t,i),this.memory.i32LoadS16(i)}loadI32U16(t,e,s){const i=e+BigInt(s);return this.trap(t,i),this.memory.i32LoadU16(i)}loadI64S8(t,e,s){const i=e+BigInt(s);return this.trap(t,i),this.memory.i64LoadS8(i)}loadI64U8(t,e,s){const i=e+BigInt(s);return this.trap(t,i),this.memory.i64LoadU8(i)}loadI64S16(t,e,s){const i=e+BigInt(s);return this.trap(t,i),this.memory.i64LoadS16(i)}loadI64U16(t,e,s){const i=e+BigInt(s);return this.trap(t,i),this.memory.i64LoadU16(i)}loadF32(t,e,s){const i=e+BigInt(s);return this.trap(t,i),this.memory.f32Load(i)}loadF64(t,e,s){const i=e+BigInt(s);return this.trap(t,i),this.memory.f64Load(i)}storeI8(t,e,s,i){const r=e+BigInt(s);this.trap(t,r),this.memory.i8Store(r,i)}storeI16(t,e,s,i){const r=e+BigInt(s);this.trap(t,r),this.memory.i16Store(r,i)}storeI32(t,e,s,i){const r=e+BigInt(s);this.trap(t,r),this.memory.i32Store(r,i)}storeI64(t,e,s,i){const r=e+BigInt(s);this.trap(t,r),this.memory.i64Store(r,i)}storeF32(t,e,s,i){const r=e+BigInt(s);this.trap(t,r),this.memory.f32Store(r,i)}storeF64(t,e,s,i){const r=e+BigInt(s);this.trap(t,r),this.memory.f64Store(r,i)}}class ue{constructor(t){this.memory=t,this.currentPools=[void 0,void 0],this.generations=new Array(2),this.mgroups=new Set,Object.freeze(this)}init(){this.setGenerationNo(0),this.currentPools[1]=this.allocMegaGroup(1,!0)}setGenerationNo(t,e=!0){let s=this.generations[t];!e&&s||(s=this.allocMegaGroup(1,!1,t),this.generations[t]=s),this.currentPools[0]=s}hpAlloc(t,e=!1,s=0){const i=t<=T?1:1+Math.ceil((t-T)/m);return this.allocMegaGroup(i,e,s)}allocate(t,e=!1){const s=t<<3;e=e||s>=g;let i=this.currentPools[Number(e)],r=Number(this.memory.i64Load(i+I)),n=Number(this.memory.i64Load(i+w));const o=this.memory.i32Load(i+E),a=n+s;if(a<=r+g*o)this.memory.i64Store(i+w,a);else{if(e)i=this.hpAlloc(s,!0),this.currentPools[1]=i;else{const t=this.memory.i16Load(i+v);i=this.hpAlloc(s,!1,t),this.currentPools[0]=i,this.generations[t]=i}n=Number(this.memory.i64Load(i+w)),this.memory.i64Store(i+w,n+s)}return n}allocatePinned(t){return this.allocate(t,!0)}allocMegaGroup(t,e=!1,s=0){const i=(m*t-S)/g,r=this.memory.getMBlocks(t),n=r+p,o=r+S;return this.memory.i64Store(n+I,o),this.memory.i64Store(n+w,o),this.memory.i64Store(n+B,0),this.memory.i16Store(n+L,t),this.memory.i32Store(n+E,i),this.memory.i16Store(n+k,e?M:0),this.memory.i16Store(n+v,s),this.mgroups.add(n),n}handleLiveness(t,e,s=!0){for(const e of t)if(!this.mgroups.has(e))throw new WebAssembly.RuntimeError("Invalid live mblock 0x"+e.toString(16));for(const t of e){if(!this.mgroups.has(t))throw new WebAssembly.RuntimeError("Invalid dead mblock 0x"+t.toString(16));this.mgroups.delete(t);const e=t-p,s=this.memory.i16Load(t+L);this.memory.freeMBlocks(e,s)}for(const e of Array.from(this.mgroups))if(!t.has(e)){const t=this.memory.i16Load(e+v),i=Boolean(this.memory.i16Load(e+k)&M);if(s||!i&&0==t){this.mgroups.delete(e);const t=e-p,s=this.memory.i16Load(e+L);this.memory.freeMBlocks(t,s)}}this.mgroups.has(this.currentPools[1])||(this.currentPools[1]=this.allocMegaGroup(1,!0));for(let t=0;t<this.generations.length;t++)this.mgroups.has(this.generations[t])||(this.generations[t]=void 0)}liveSize(){let t=0;for(const e of this.mgroups)t+=this.memory.i16Load(e+L);return t}}class he{constructor(){this.spt=new Map,this.lasts=[0,0],Object.freeze(this)}newWithTag(t,e){const s=++this.lasts[e]<<1|e;return this.spt.set(s,t),s}newStablePtr(t){return this.newWithTag(t,0)}deRefStablePtr(t){return this.spt.get(t)}freeStablePtr(t){this.spt.delete(t)}newJSVal(t){return this.newWithTag(t,1)}getJSVal(t){return this.deRefStablePtr(t)}freeJSVal(t){this.freeStablePtr(t)}hasStablePtr(t){return this.spt.has(t)}preserveJSVals(t){for(const e of Array.from(this.spt.keys()))1&e&&!t.has(e)&&this.freeJSVal(e)}}class le{constructor(t,e,s){this.memory=t,this.heapalloc=e,this.ptr2stable=new Map,this.SymbolTable=s,Object.seal(this)}makeStableName(t){const e=this.ptr2stable.get(t);if(void 0!==e)return e;const s=this.ptr2stable.size;let i=this.heapalloc.allocatePinned(qt);return this.memory.i64Store(i,this.SymbolTable.stg_STABLE_NAME_info),this.memory.i64Store(i+Yt,s),this.ptr2stable.set(t,i),i}}const me=(BigInt(1)<<BigInt(64))-BigInt(1);class fe{constructor(t,e,s){this.memory=t,this.stablePtrManager=e,this.sptEntries=s,Object.freeze(this);for(const[,t]of this.sptEntries)this.stablePtrManager.newStablePtr(t)}hs_spt_lookup(t,e,s,i){const r=this.sptEntries.get(BigInt(i)<<BigInt(96)|BigInt(s)<<BigInt(64)|BigInt(e)<<BigInt(32)|BigInt(t));return r||0}hs_spt_key_count(){return this.sptEntries.size}hs_spt_keys(t,e){if(e!==this.hs_spt_key_count())throw new WebAssembly.RuntimeError(`hs_spt_keys required ${e} keys, but there are ${this.hs_spt_key_count()}`);for(const[e]of this.sptEntries)this.memory.i64Store(t,e&me),this.memory.i64Store(t+8,e>>BigInt(64)),t+=16;return e}}let ge=function(t,e){var s=Object.create(t);if(!s.setImmediate){var i,r,n,o,a,c=1,u={},h=!1,l=s.document,m=s;return"[object process]"==={}.toString.call(s.process)?i=function(t){process.nextTick((function(){g(t)}))}:!function(){if(s.postMessage&&!s.importScripts){var t=!0,e=s.onmessage;return s.onmessage=function(){t=!1},s.postMessage("","*"),s.onmessage=e,t}}()?s.MessageChannel?((n=new MessageChannel).port1.onmessage=function(t){g(t.data)},i=function(t){n.port2.postMessage(t)}):l&&"onreadystatechange"in l.createElement("script")?(r=l.documentElement,i=function(t){var e=l.createElement("script");e.onreadystatechange=function(){g(t),e.onreadystatechange=null,r.removeChild(e),e=null},r.appendChild(e)}):i=function(t){setTimeout(g,0,t)}:(o="setImmediate$"+Math.random()+"$",a=function(t){t.source===s&&"string"==typeof t.data&&0===t.data.indexOf(o)&&g(+t.data.slice(o.length))},s.addEventListener?s.addEventListener("message",a,!1):s.attachEvent("onmessage",a),i=function(t){s.postMessage(o+t,"*")}),m.setImmediate=function(t){"function"!=typeof t&&(t=new Function(""+t));for(var e=new Array(arguments.length-1),s=0;s<e.length;s++)e[s]=arguments[s+1];var r={callback:t,args:e};return u[c]=r,i(c),c++},m.clearImmediate=f,s}function f(t){delete u[t]}function g(t){if(h)setTimeout(g,0,t);else{var e=u[t];if(e){h=!0;try{!function(t){var e=t.callback,s=t.args;switch(s.length){case 0:e();break;case 1:e(s[0]);break;case 2:e(s[0],s[1]);break;case 3:e(s[0],s[1],s[2]);break;default:e.apply(void 0,s)}}(e)}finally{f(t),h=!1}}}}}("undefined"==typeof self?"undefined"==typeof global?void 0:global:self);function de(t,...e){return ge.setImmediate(t,...e)}class be{constructor(t,e,s,i){this.memory=t,this.symbolTable=e,this.lastTid=0,this.tsos=new Map,this.exports=void 0,this.stablePtrManager=s,this.fs=i,this.gc=void 0,this.blockingPromise=void 0,Object.seal(this)}setGC(t){this.gc=t}newTSO(){const t=++this.lastTid;let e,s;const i=new Promise((t,i)=>{e=t,s=i});return this.tsos.set(t,Object.seal({addr:-1,ret:0,retError:void 0,rstat:-1,ffiRet:void 0,ffiRetType:void 0,ffiRetErr:void 0,returnPromise:i,promise_resolve:e,promise_reject:s})),t}getTSOaddr(t){return this.tsos.get(t).addr}getTSOret(t){return this.tsos.get(t).ret}getTSOrstat(t){return this.tsos.get(t).rstat}setTSOaddr(t,e){this.tsos.get(t).addr=e}setTSOret(t,e){this.tsos.get(t).ret=e}setTSOrstat(t,e){this.tsos.get(t).rstat=e}getTSOid(t){return this.memory.i32Load(t+Ot)}returnFFIPromise(t){this.blockingPromise=t}returnedFromTSO(t){const e=this.tsos.get(t),s=e.addr,i=Number(this.memory.i64Load(this.symbolTable.MainCapability+N+pt));switch(i){case 1:this.gc.performGC(),de(()=>this.tick(t));break;case 2:{const e=Number(this.memory.i64Load(s+xt)),i=this.exports.growStack(e);this.memory.i64Store(s+xt,i),de(()=>this.tick(t));break}case 3:de(()=>this.tick(t));break;case 4:{const i=Number(this.memory.i16Load(s+Dt));switch(i){case ye.OnCCall:case ye.OnCCall_Interruptible:{const s=this.blockingPromise;this.blockingPromise=void 0,s.then(s=>{const[i,r]=s;e.ffiRet=r,e.ffiRetType=i,de(()=>this.tick(t))},s=>{e.ffiRetErr=s,de(()=>this.tick(t))});break}case ye.OnDelay:{const e=Number(this.memory.i64Load(s+Rt));new Promise((t,s)=>{setTimeout(()=>t(),e/1e3)}).then(()=>{de(()=>this.tick(t))},t=>{throw new WebAssembly.RuntimeError("Scheduler: blocking TSO Promise rejected with "+t)});break}case ye.OnBlackHole:case ye.OnMVar:case ye.OnMVarRead:break;default:throw new WebAssembly.RuntimeError("Unhandled thread blocking reason: "+i)}break}case 5:switch(Number(this.memory.i16Load(s+Vt))){case 1:de(()=>this.tick(t));break;case 3:e.ret=0,e.rstat=2,e.promise_reject(e.retError);break;case 4:{const i=Number(this.memory.i64Load(s+xt)),r=Number(this.memory.i64Load(i+Ut));e.ret=Number(this.memory.i64Load(r+8)),e.rstat=1,e.promise_resolve(t);break}}break;default:throw new WebAssembly.RuntimeError("returnFFIPromise: unsupported thread stopping reason "+i)}}tick(t){this.exports.context.reentrancyGuard.enter(0);try{const e=this.tsos.get(t),s=e.addr;if(e.ffiRetErr){const t=Number(this.memory.i64Load(s+xt)),i=Number(this.memory.i64Load(t+Ut))-16,r=this.exports.rts_apply(this.symbolTable.base_AsteriusziTypesziJSException_mkJSException_closure,this.exports.rts_mkJSVal(this.stablePtrManager.newJSVal(e.ffiRetErr)));this.memory.i64Store(t+Ut,i),this.memory.i64Store(i,this.symbolTable.stg_raise_ret_info),this.memory.i64Store(i+8,r)}else if("number"==typeof e.ffiRetType)switch(e.ffiRetType){case 0:break;case 1:{const t=this.stablePtrManager.newJSVal(e.ffiRet);this.memory.i64Store(this.symbolTable.MainCapability+N+gt,t);break}case 2:this.memory.i64Store(this.symbolTable.MainCapability+N+gt,e.ffiRet);break;case 3:this.memory.f32Store(this.symbolTable.MainCapability+N+dt,e.ffiRet);break;case 4:this.memory.f64Store(this.symbolTable.MainCapability+N+bt,e.ffiRet);break;default:throw new WebAssembly.RuntimeError(`Unsupported FFI return value type tag ${e.ffiRetType} (more than one value?): ${e.ffiRet}`)}e.ffiRet=void 0,e.ffiRetType=void 0,e.ffiRetErr=void 0;let i=!1;try{this.exports.scheduleTSO(s)}catch(s){i=!0,this.exports.stg_returnToSchedNotPaused(),e.ffiRetErr=s,de(()=>this.tick(t))}i||this.returnedFromTSO(t)}finally{this.exports.context.reentrancyGuard.exit(0)}}tsoReportException(t,e){const s=this.stablePtrManager.getJSVal(e);this.stablePtrManager.freeJSVal(e);const i=this.getTSOid(t);this.tsos.get(i).retError=s}enqueueTSO(t){const e=this.getTSOid(t),s=this.tsos.get(e);-1==s.addr&&(s.addr=Number(t)),de(()=>this.tick(e))}submitCmdCreateThread(t,e){const s=this.exports[t](e),i=this.getTSOid(s),r=this.tsos.get(i);return this.enqueueTSO(s),r.returnPromise}}const ye={NotBlocked:0,OnMVar:1,OnMVarRead:14,OnBlackHole:2,OnRead:3,OnWrite:4,OnDelay:5,OnSTM:6,OnDoProc:7,OnCCall:10,OnCCall_Interruptible:11,OnMsgThrowTo:12,ThreadMigrating:13};class _e{constructor(){this.view=new DataView(new ArrayBuffer(8)),Object.freeze(this)}mul2(t,e,s,i,r){this.view.setInt32(0,e,!0),this.view.setInt32(4,t,!0);const n=this.view.getBigUint64(0,!0);this.view.setInt32(0,i,!0),this.view.setInt32(4,s,!0);const o=this.view.getBigUint64(0,!0),a=Number(n*o>>BigInt(32*r)&(BigInt(1)<<BigInt(32))-BigInt(1));return Number(a)}quotrem2_quotient(t,e,s,i,r,n,o){this.view.setInt32(0,e,!0),this.view.setInt32(4,t,!0);const a=this.view.getBigUint64(0,!0);this.view.setInt32(0,i,!0),this.view.setInt32(4,s,!0);const c=this.view.getBigUint64(0,!0),u=a<<BigInt(64)|c;this.view.setInt32(0,n,!0),this.view.setInt32(4,r,!0);const h=this.view.getBigUint64(0,!0),l=Number(u/h>>BigInt(32*o)&(BigInt(1)<<BigInt(32))-BigInt(1));return Number(l)}quotrem2_remainder(t,e,s,i,r,n,o){this.view.setInt32(0,e,!0),this.view.setInt32(4,t,!0);const a=this.view.getBigUint64(0,!0);this.view.setInt32(0,i,!0),this.view.setInt32(4,s,!0);const c=this.view.getBigUint64(0,!0),u=a<<BigInt(64)|c;this.view.setInt32(0,n,!0),this.view.setInt32(4,r,!0);const h=this.view.getBigUint64(0,!0),l=Number(u%h>>BigInt(32*o)&(BigInt(1)<<BigInt(32))-BigInt(1));return Number(l)}}class pe{constructor(t,e){this.flush=t,this.consoleHistory=e,this.history="",this.buffer="",this.decoder=new TextDecoder("utf-8",{fatal:!0}),Object.seal(this)}read(){const t=this.history;return this.history="",t}write(t){const e="string"==typeof t?t:this.decoder.decode(t,{stream:!0});this.consoleHistory&&(this.history+=e),this.buffer+=e;const s=this.buffer.split("\n");this.buffer=s.pop();for(const t of s)this.flush(t);return t.length}}class Se{constructor(t){this.files=[void 0,new pe(console.log,t),new pe(console.error,t)],Object.freeze(this)}readSync(t){return this.files[t].read()}writeSync(t,e){return this.files[t].write(e)}}class Te{constructor(t){this.memory=t,Object.seal(this)}fps_reverse(t,e,s){const i=ae.unTag(t),r=ae.unTag(e);this.memory.i8View.copyWithin(i,r,r+s),this.memory.i8View.subarray(i,i+s).reverse()}fps_intersperse(t,e,s,i){let r=ae.unTag(t),n=ae.unTag(e);for(;s>1;)this.memory.i8View[r++]=this.memory.i8View[n++],this.memory.i8View[r++]=i,--s;1===s&&(this.memory.i8View[r]=this.memory.i8View[n])}fps_maximum(t,e){const s=ae.unTag(t),i=this.memory.i8View.subarray(s,s+e);return i.reduce((t,e)=>Math.max(t,e),i[0])}fps_minimum(t,e){const s=ae.unTag(t),i=this.memory.i8View.subarray(s,s+e);return i.reduce((t,e)=>Math.min(t,e),i[0])}fps_count(t,e,s){const i=ae.unTag(t);return this.memory.i8View.subarray(i,i+e).reduce((t,e)=>e===s?t+1:t,0)}fps_memcpy_offsets(t,e,s,i,r){const n=ae.unTag(t),o=ae.unTag(s);return this.memory.i8View.copyWithin(n+e,o+i,o+i+r),t+e}_hs_bytestring_itoa(t,e,s,i){const r=ae.unTag(e),n=t.toString(s).padStart(i,"0");for(let t=0;t<n.length;++t)this.memory.i8View[r+t]=n.codePointAt(t);return e+n.length}_hs_bytestring_int_dec(t,e){return this._hs_bytestring_itoa(t,e,10,0)}_hs_bytestring_long_long_int_dec(t,e){return this._hs_bytestring_itoa(t,e,10,0)}_hs_bytestring_uint_dec(t,e){return this._hs_bytestring_itoa(t,e,10,0)}_hs_bytestring_long_long_uint_dec(t,e){return this._hs_bytestring_itoa(t,e,10,0)}_hs_bytestring_int_dec_padded9(t,e){this._hs_bytestring_itoa(t,e,10,9)}_hs_bytestring_long_long_int_dec_padded18(t,e){this._hs_bytestring_itoa(t,e,10,18)}_hs_bytestring_uint_hex(t,e){return this._hs_bytestring_itoa(t,e,16,0)}_hs_bytestring_long_long_uint_hex(t,e){return this._hs_bytestring_itoa(t,e,16,0)}}class Ie{constructor(t){this.memory=t,Object.seal(this)}_hs_text_memcpy(t,e,s,i,r){const n=ae.unTag(t)+2*e,o=ae.unTag(s)+2*i;this.memory.i8View.copyWithin(n,o,o+2*r)}_hs_text_memcmp(t,e,s,i,r){const n=ae.unTag(t)+2*e,o=ae.unTag(s)+2*i;for(let t=0;t<2*r;++t){const e=Math.sign(this.memory.i8View[n+t]-this.memory.i8View[o+t]);if(e)return e}return 0}_hs_text_decode_utf8(t,e,s,i){const r=new TextDecoder("utf-8",{fatal:!0}).decode(this.memory.i8View.subarray(ae.unTag(s),ae.unTag(i)));for(let e=0;e<r.length;++e)this.memory.i16Store(t+2*e,r.charCodeAt(e));return this.memory.i64Store(e,r.length),i}_hs_text_encode_utf8(t,e,s,i){const r=new TextDecoder("utf-16le",{fatal:!0}).decode(this.memory.i8View.subarray(ae.unTag(e+2*s),ae.unTag(e+2*s+2*i))),n=Number(this.memory.i64Load(t)),o=(new TextEncoder).encodeInto(r,this.memory.i8View.subarray(ae.unTag(n),ae.unTag(n+3*i))).written;this.memory.i64Store(t,n+o)}}class we{constructor(t,e){this.memory=t,this.resolution=e.Time.resolution,this.getCPUTime=e.Time.getCPUTime,this.getUnixEpochTime=e.Time.getUnixEpochTime,Object.freeze(this)}getMonotonicNSec(){const t=this.getCPUTime();return 1e9*t[0]+t[1]}clock_getres(t,e){if(e){let t=0,s=this.resolution;s>1e9&&(t=Math.floor(this.resolution/1e9),s=0),this.memory.i64Store(e+b,t),this.memory.i64Store(e+y,s)}return 0}clock_gettime(t,e){if(e){const s=t==ie?this.getCPUTime():this.getUnixEpochTime();this.memory.i64Store(e+b,s[0]),this.memory.i64Store(e+y,s[1])}return 0}}const Be=[0,0,0,0,65,1,65,65,65,194,964,16328,194,66,130,2,451,195,323,67,387,131,259,3,4,5,6,7,8];function ve(t){const e=Number(t);return e-(e&m-1)+p}class Le{constructor(t,e,s,i,r,n,o,a,c,u){this.memory=t,this.heapAlloc=e,this.stablePtrManager=s,this.stableNameManager=i,this.scheduler=r,this.infoTables=n,this.symbolTable=o,this.reentrancyGuard=a,this.yolo=c,this.gcThreshold=u,this.nonMovedObjects=new Set,this.nonMovedObjectsToScavenge=[],this.liveMBlocks=new Set,this.blocksToScavenge=[],this.deadMBlocks=new Set,this.liveJSVals=new Set,Object.freeze(this)}isPinned(t){const e=ve(t),s=this.memory.i16Load(e+k);return Boolean(s&M)}copyClosure(t,e){const s=this.heapAlloc.allocate(Math.ceil(e/8));this.memory.memcpy(s,t,e);const i=ve(s);return this.liveMBlocks.has(i)||(this.blocksToScavenge.push(i),this.liveMBlocks.add(i)),this.deadMBlocks.add(ve(t)),s}stingyEval(t,e,s,i){switch(e||(e=ae.unDynTag(t),(s=Number(this.memory.i64Load(e)))%2==0&&(i=this.memory.i32Load(s+Q))),i){case 27:{this.memory.i64Store(e,this.symbolTable.stg_WHITEHOLE_info);const[t,s]=this.stingyEval(Number(this.memory.i64Load(e+q)));return this.memory.i64Store(e,this.symbolTable.stg_IND_info),this.memory.i64Store(e+q,t),[t,27]}case 22:{this.memory.i64Store(e,this.symbolTable.stg_WHITEHOLE_info);const[r,n]=this.stingyEval(Number(this.memory.i64Load(e+kt)));switch(n){case 1:case 4:case 7:{const i=this.memory.i32Load(s+Z),n=this.memory.i64Load(ae.unDynTag(r)+(1+i<<3));return this.memory.i64Store(e+q,n),this.stingyEval(t,e,s,27)}case 2:case 5:{const i=this.memory.i64Load(ae.unDynTag(r)+8);return this.memory.i64Store(e+q,i),this.stingyEval(t,e,s,27)}default:return this.memory.i64Store(e,s),this.memory.i64Store(e+kt,r),[t,i]}}default:return[t,i]}}evacuateClosure(t){if(!ae.getTag(t)){if(!(1&Number(t)))throw new WebAssembly.RuntimeError("Illegal JSVal 0x"+t.toString(16));return this.liveJSVals.add(Number(t)),t}const e=ae.getDynTag(t),s=ae.unDynTag(t);let i=Number(this.memory.i64Load(s));if(i%2)return ae.setDynTag(i,e);if(this.nonMovedObjects.has(s))return t;if(!this.memory.heapAlloced(s))return this.nonMovedObjects.add(s),this.nonMovedObjectsToScavenge.push(s),t;if(this.isPinned(s))return this.nonMovedObjects.add(s),this.nonMovedObjectsToScavenge.push(s),this.liveMBlocks.add(ve(s)),t;if(this.infoTables&&!this.infoTables.has(i))throw new WebAssembly.RuntimeError("Invalid info table 0x"+i.toString(16));let r=void 0,n=this.memory.i32Load(i+Q);switch(22!=n&&27!=n||(n=this.stingyEval(Number(t),s,i,n)[1]),n){case 3:case 10:case 9:case 2:r=this.copyClosure(s,16);break;case 16:case 17:r=this.copyClosure(s,Nt+8);break;case 19:case 18:case 20:r=this.copyClosure(s,Nt+16);break;case 12:case 11:case 13:case 5:case 4:case 6:r=this.copyClosure(s,24);break;case 15:{const t=this.memory.i32Load(i+Z),e=this.memory.i32Load(i+Z+4);r=this.copyClosure(s,Nt+(t+e<<3));break}case 8:case 1:case 7:case 39:case 40:case 47:case 48:case 49:case 50:case 51:case 38:{const t=this.memory.i32Load(i+Z),e=this.memory.i32Load(i+Z+4);r=this.copyClosure(s,1+t+e<<3);break}case 22:r=this.copyClosure(s,Lt);break;case 27:return r=this.evacuateClosure(this.memory.i64Load(s+q)),this.memory.i64Store(s,ae.setDynTag(r,1)),r;case 25:{const t=this.memory.i32Load(s+lt);r=this.copyClosure(s,ut+(t<<3));break}case 24:{const t=this.memory.i32Load(s+C);r=this.copyClosure(s,P+(t<<3));break}case 26:{const t=Number(this.memory.i64Load(s+D));r=this.copyClosure(s,V+(t<<3));break}case 42:r=this.copyClosure(s,8*Math.ceil((U+Number(this.memory.i64Load(s+W)))/8));break;case 43:case 44:case 45:case 46:r=this.copyClosure(s,it+(Number(this.memory.i64Load(s+rt))<<3));break;case 59:case 60:case 61:case 62:r=this.copyClosure(s,Et+(Number(this.memory.i64Load(s+Mt))<<3));break;default:throw new WebAssembly.RuntimeError}return this.memory.i64Store(s,r+1),ae.setDynTag(r,e)}scavengeClosureAt(t){this.memory.i64Store(t,this.evacuateClosure(this.memory.i64Load(t)))}scavengePointersFirst(t,e){for(let s=0;s<e;++s)this.scavengeClosureAt(t+(s<<3))}scavengeSmallBitmap(t,e,s){for(let i=0;i<s;++i)1&Number(e>>BigInt(i))||this.scavengeClosureAt(t+(i<<3))}scavengeLargeBitmap(t,e,s){for(let i=0;i<s;i+=64){const r=this.memory.i64Load(e+st+(i>>3));for(let e=i;e-i<64&&e<s;++e)1&Number(r>>BigInt(e-i))||this.scavengeClosureAt(t+(e<<3))}}scavengePAP(t,e,s,i){this.scavengeClosureAt(t+e);const r=this.memory.i64Load(t+e),n=Number(this.memory.i64Load(ae.unDynTag(r)));if(this.infoTables&&!this.infoTables.has(n))throw new WebAssembly.RuntimeError("Invalid info table 0x"+n.toString(16));switch(this.memory.i32Load(n+$+j)){case 0:this.scavengeSmallBitmap(s,this.memory.i64Load(n+$+J)>>BigInt(6),i);break;case 1:this.scavengeLargeBitmap(s,Number(this.memory.i64Load(n+$+J)),i);break;case 2:throw new WebAssembly.RuntimeError;default:this.scavengeSmallBitmap(s,BigInt(Be[this.memory.i32Load(n+$+j)])>>BigInt(6),i)}}scavengeStackChunk(t,e){let s=t;for(;;){if(s>e)throw new WebAssembly.RuntimeError;if(s==e)break;const t=Number(this.memory.i64Load(s)),i=this.memory.i32Load(t+Q),r=this.memory.i64Load(t+Z);if(this.infoTables&&!this.infoTables.has(t))throw new WebAssembly.RuntimeError("Invalid info table 0x"+t.toString(16));switch(this.memory.i32Load(t+tt)&&this.evacuateClosure(this.memory.i64Load(t+vt)),i){case 30:case 33:case 34:case 35:case 36:case 55:case 56:case 57:{const t=63&Number(r),e=r>>BigInt(6);this.scavengeSmallBitmap(s+8,e,t),s+=1+t<<3;break}case 31:{const t=Number(this.memory.i64Load(Number(r)+et));this.scavengeLargeBitmap(s+8,Number(r),t),s+=1+t<<3;break}case 32:{const t=s,e=Number(this.memory.i64Load(t+Tt));this.scavengeClosureAt(t+It);const i=Number(this.memory.i64Load(t+It))+0,r=Number(this.memory.i64Load(ae.unDynTag(i))),n=this.memory.i32Load(r+$+j),o=t+wt;switch(n){case 0:this.scavengeSmallBitmap(s+wt,this.memory.i64Load(r+$+J)>>BigInt(6),e);break;case 1:this.scavengeLargeBitmap(s+wt,Number(this.memory.i64Load(r+$+J)),e);break;case 2:throw new WebAssembly.RuntimeError;default:{const t=63,e=6,s=Be[n],i=BigInt(s)>>BigInt(e),r=s&t;this.scavengeSmallBitmap(o,i,r);break}}s+=St+(e<<3);break}default:throw new WebAssembly.RuntimeError}}}scavengeLoop(){const t=this.nonMovedObjectsToScavenge,e=this.blocksToScavenge;let s=void 0,i=void 0;for(;;){for(s||(s=e.pop(),s&&(i=Number(this.memory.i64Load(s+I))));s;){if(i>=Number(this.memory.i64Load(s+w)))break;i+=this.scavengeClosure(i)}if(e.length>0)s=i=void 0;else{if(0==t.length)return;for(;t.length>0;)this.scavengeClosure(t.pop())}}}scavengeClosure(t){const e=Number(this.memory.i64Load(t)),s=this.memory.i32Load(e+Q);if(this.infoTables&&!this.infoTables.has(e))throw new WebAssembly.RuntimeError("Invalid info table 0x"+e.toString(16));switch(s){case 2:return this.scavengePointersFirst(t+8,1),16;case 3:return 16;case 5:return this.scavengePointersFirst(t+8,1),24;case 4:return this.scavengePointersFirst(t+8,2),24;case 6:return 24;case 8:case 9:case 10:case 11:case 12:case 13:case 14:{this.memory.i32Load(e+tt)&&this.evacuateClosure(this.memory.i64Load(e+$+H));const s=this.memory.i32Load(e+Z),i=this.memory.i32Load(e+Z+4);return this.scavengePointersFirst(t+8,s),1+s+i<<3}case 1:case 7:case 38:case 47:case 48:case 50:case 51:case 63:{const s=this.memory.i32Load(e+Z),i=this.memory.i32Load(e+Z+4);return this.scavengePointersFirst(t+8,s),1+s+i<<3}case 21:case 15:case 16:case 17:case 18:case 19:case 20:{this.memory.i32Load(e+tt)&&this.evacuateClosure(this.memory.i64Load(e+Ct));const s=this.memory.i32Load(e+Z),i=this.memory.i32Load(e+Z+4);return this.scavengePointersFirst(t+Pt,s),Nt+(s+i<<3)}case 22:return this.memory.i32Load(e+tt)&&this.evacuateClosure(this.memory.i64Load(e+Ct)),this.scavengeClosureAt(t+kt),Lt;case 24:{const e=this.memory.i32Load(t+C);return this.scavengePAP(t,O,t+x,e),P+(e<<3)}case 25:{const e=this.memory.i32Load(t+lt);return this.scavengePAP(t,mt,t+ft,e),ut+(e<<3)}case 26:{const e=Number(this.memory.i64Load(t+D));return this.scavengeClosureAt(t+R),this.scavengeStackChunk(t+z,t+z+e),V+(e<<3)}case 28:return void this.scavengeClosureAt(t+Y);case 39:case 40:return this.scavengeClosureAt(t+ot),this.scavengeClosureAt(t+at),this.scavengeClosureAt(t+ct),ct+8;case 42:return 8*Math.ceil((U+Number(this.memory.i64Load(t+W)))/8);case 43:case 44:case 45:case 46:{const e=Number(this.memory.i64Load(t+rt));return this.scavengePointersFirst(t+nt,e),it+(e<<3)}case 49:return this.scavengeClosureAt(t+Ht),this.scavengeClosureAt(t+Jt),this.scavengeClosureAt(t+Gt),this.scavengeClosureAt(t+$t),Xt+8;case 52:return void this.scavengeClosureAt(t+xt);case 53:{const e=this.memory.i32Load(t+zt)<<3,s=Number(this.memory.i64Load(t+Ut)),i=t+Wt+e;return this.scavengeStackChunk(s,i),Wt+e}case 59:case 60:case 61:case 62:{const e=Number(this.memory.i64Load(t+Mt));return this.scavengePointersFirst(t+At,e),At+(e<<3)}default:throw new WebAssembly.RuntimeError}}updateNursery(){const t=this.symbolTable.MainCapability+N,e=Number(this.memory.i64Load(t+_t));this.memory.i64Store(t+_t,0),this.memory.i64Store(t+yt,this.heapAlloc.hpAlloc(e))}performGC(){if(this.yolo||this.heapAlloc.liveSize()<this.gcThreshold)return void this.updateNursery();this.reentrancyGuard.enter(1),this.heapAlloc.setGenerationNo(1);for(const[t,e]of this.scheduler.tsos)e.addr=this.evacuateClosure(e.addr);for(const[t,e]of this.stablePtrManager.spt.entries())1&t||this.stablePtrManager.spt.set(t,this.evacuateClosure(e));let t=new Map;for(const[e,s]of this.stableNameManager.ptr2stable.entries()){const i=this.evacuateClosure(e),r=this.evacuateClosure(s);t.set(i,r)}this.stableNameManager.ptr2stable=t,this.scavengeLoop();for(const[t,e]of this.scheduler.tsos)if(e.ret){const t=e.addr,s=Number(this.memory.i64Load(t+xt)),i=Number(this.memory.i64Load(s+Ut));e.ret=Number(this.memory.i64Load(i+8))}this.heapAlloc.handleLiveness(this.liveMBlocks,this.deadMBlocks),this.heapAlloc.setGenerationNo(0),this.updateNursery(),this.stablePtrManager.preserveJSVals(this.liveJSVals),this.nonMovedObjects.clear(),this.liveMBlocks.clear(),this.deadMBlocks.clear(),this.liveJSVals.clear(),this.reentrancyGuard.exit(1)}}class ke{constructor(t,e,s,i,r){this.memory=t,this.heapAlloc=e,this.exports=s,this.infoTables=i,this.symbolTable=r,this.decoder=new TextDecoder("utf-8",{fatal:!0}),Object.freeze(this)}raiseExceptionHelper(t,e,s){const i=this.heapAlloc.allocate(Math.ceil(Nt/8)+1);this.memory.i64Store(i,this.symbolTable.stg_raise_info),this.memory.i64Store(i+Pt,s);const r=Number(this.memory.i64Load(e+xt));let n=Number(this.memory.i64Load(r+Ut));for(;;){const t=Number(this.memory.i64Load(n)),s=this.memory.i32Load(t+Q),o=this.memory.i64Load(t+Z);if(this.infoTables&&!this.infoTables.has(t))throw new WebAssembly.RuntimeError("Invalid info table 0x"+t.toString(16));switch(s){case 33:{const t=Number(this.memory.i64Load(n+jt));try{this.exports.updateThunk(this.symbolTable.MainCapability,e,t,i)}catch(e){console.error("updateThunk failed with "+e),this.memory.i64Store(t,this.symbolTable.stg_BLACKHOLE_info),this.memory.i64Store(t+q,i)}n+=1+Number(o&BigInt(63))<<3;break}case 34:case 36:return this.memory.i64Store(r+Ut,n),s;case 30:n+=1+Number(o&BigInt(63))<<3;break;case 31:n+=1+Number(this.memory.i64Load(Number(o)+et))<<3;break;case 32:{const t=Number(this.memory.i64Load(n+Tt));n+=St+(t<<3);break}default:throw new WebAssembly.RuntimeError(`raiseExceptionHelper: unsupported stack frame ${s} at 0x${n.toString(16)}`)}}}barf(t){if(t){const e=this.memory.i8View.subarray(ae.unTag(t)),s=e.indexOf(0),i=e.subarray(0,s),r=this.decoder.decode(i);throw new WebAssembly.RuntimeError("barf: "+r)}throw new WebAssembly.RuntimeError("barf")}}class Ee{constructor(t,e){this.memory=t,this.fs=e,this.encoder=new TextEncoder,Object.freeze(this)}debugBelch2(t,e){const s=this.memory.strLoad(e)+"\n";this.fs.writeSync(2,this.encoder.encode(s))}}class Me{constructor(t){this.memory=t,this.FLT_MIN_EXP=-125,this.FLT_MANT_DIG=24,this.DBL_MIN_EXP=-1021,this.DBL_MANT_DIG=53,this.MY_DMINEXP=this.DBL_MIN_EXP-this.DBL_MANT_DIG-1,this.DHIGHBIT=1048576,this.DMSBIT=2147483648,this.MY_FMINEXP=this.FLT_MIN_EXP-this.FLT_MANT_DIG-1,this.FHIGHBIT=8388608,this.FMSBIT=2147483648,this.FLT_HIDDEN=8388608,this.FLT_POWER2=16777216,this.DBL_HIDDEN=1048576,this.DBL_POWER2=2097152,this.LTOP_BIT=2147483648,this.buffer=new ArrayBuffer(8),this.view=new DataView(this.buffer),Object.seal(this)}isFloatNegativeZero(t){return Object.is(-0,t)}isFloatNaN(t){return t!=t}isDoubleNaN(t){return t!=t}isFloatFinite(t){return isFinite(t)}isDoubleFinite(t){return isFinite(t)}isFloatInfinite(t){return!isFinite(t)&&!this.isFloatNaN(t)}isDoubleInfinite(t){return!isFinite(t)&&!this.isDoubleNaN(t)}floatMantissaFromBits(t){return 8388607&t}floatExponentFromBits(t){return(t^this.floatSignFromBits(t)<<31)>>>23&255}floatSignFromBits(t){return t>>>31}doubleMantissaFromBits(t){return t&(BigInt(1)<<BigInt(52))-BigInt(1)}doubleExponentFromBits(t){const e=BigInt(2047);return(t^this.doubleSignFromBits(t)<<BigInt(63))>>BigInt(52)&e}doubleSignFromBits(t){return t>>BigInt(63)}isDoubleDenormalized(t){const e=this.DoubleToIEEE(t),s=this.doubleExponentFromBits(e),i=this.doubleMantissaFromBits(e);return s===BigInt(0)&&i!==BigInt(0)}isFloatDenormalized(t){const e=this.FloatToIEEE(t),s=this.floatExponentFromBits(e),i=this.floatMantissaFromBits(e);return 0===s&&0!==i}isDoubleNegativeZero(t){return Object.is(-0,t)}FloatToIEEE(t){return this.view.setFloat32(0,t),this.view.getUint32(0)}DoubleToIEEE(t){return this.view.setFloat64(0,t),this.view.getBigUint64(0)}DoubleTo2Int(t){return this.view.setFloat64(0,t),[this.view.getUint32(0),this.view.getUint32(4)]}IEEEToFloat(t){return this.view.setInt32(0,t),this.view.getFloat32(0)}IEEEToDouble(t){return this.view.setBigInt64(0,t),this.view.getFloat64(0)}__decodeFloat_Int(t,e,s){let i,r,n,o=this.FloatToIEEE(s);if(0==(o&~this.FMSBIT))i=0,r=0;else{if(r=(o>>>23&255)+this.MY_FMINEXP,this.view.setUint32(0,o),n=this.view.getInt32(0),o&=this.FHIGHBIT-1,r!=this.MY_FMINEXP)o|=this.FHIGHBIT;else for(r+=1;!(o&this.FHIGHBIT);)o<<=1,r-=1;i=o,n<0&&(i=-i)}this.memory.i64Store(t,i),this.memory.i64Store(e,r)}__decodeDouble_2IntJS(t){let e,s,i,r,n;const o=this.DoubleTo2Int(t);let a=o[1],c=o[0],u=0;if(0==a&&0==(c&~this.DMSBIT))i=0,r=0,n=0,s=0;else{if(s=(c>>>20&2047)+this.MY_DMINEXP,this.view.setUint32(0,c),e=this.view.getInt32(0),c&=this.DHIGHBIT-1,s!=this.MY_DMINEXP)c|=this.DHIGHBIT;else for(s++;!(c&this.DHIGHBIT);)c<<=1,a&this.DMSBIT&&c++,a<<=1,s--;u=s,i=a,r=c,n=e<0?-1:1}return[n,r,i,u]}__decodeDouble_2Int(t,e,s,i,r){const[n,o,a,c]=this.__decodeDouble_2IntJS(r);this.memory.dataView.setBigInt64(ae.unTag(t),BigInt(n),!0),this.memory.i64Store(e,o),this.memory.i64Store(s,a),this.memory.i64Store(i,c)}decodeDoubleInteger(t){const e=this.__decodeDouble_2IntJS(t),s=e[0],i=e[1],r=e[2],n=e[3];return[BigInt(s)*(BigInt(i)*(BigInt(1)<<BigInt(32))+BigInt(r)),n]}rintFloat(t){const e=this.FloatToIEEE(t);let s=BigInt(this.floatExponentFromBits(e)),i=BigInt(this.floatMantissaFromBits(e)),r=BigInt(this.floatSignFromBits(e));const n=()=>this.IEEEToFloat(Number(r<<BigInt(31)|s<<BigInt(23)|i));if(s>149)return t;if(s<126)return 0;const o=BigInt(1)<<BigInt(149)-s,a=BigInt(2)*o-BigInt(1);let c=i|BigInt(this.FLT_HIDDEN),u=c&a;return c^=u,u<o||u==o&&0==(c&BigInt(2)*o)?0==c?0:(i=c^BigInt(this.FLT_HIDDEN),n()):(c+=BigInt(2)*o,c==this.FLT_POWER2?(i=BigInt(0),s+=BigInt(1),n()):(i=c^BigInt(this.FLT_HIDDEN),n()))}rintDouble(t){const e=this.DoubleToIEEE(t);let s=this.doubleExponentFromBits(e),i=this.doubleMantissaFromBits(e);this.view.setBigUint64(0,i,!0);let r=BigInt(this.view.getUint32(0,!0)),n=BigInt(this.view.getUint32(4,!0)),o=this.doubleSignFromBits(e);const a=()=>{this.view.setInt32(0,Number(r),!0),this.view.setInt32(4,Number(n),!0);const t=this.view.getBigUint64(0,!0),e=o<<BigInt(63)|s<<BigInt(52)|t;return Number(this.IEEEToDouble(e))};if(s>1074)return t;if(s<1022)return 0;if(s<1043){const t=BigInt(1)<<BigInt(1042)-s,e=BigInt(2)*t-BigInt(1);let i=n|BigInt(this.DBL_HIDDEN);const o=i&e;return i^=o,o<t||o==t&&0==r&&0==(i&BigInt(2)*t)?0==i?0:(n=i^BigInt(this.DBL_HIDDEN),r=BigInt(0),a()):(r=BigInt(0),i+=BigInt(2)*t,i==this.DBL_POWER2?(n=BigInt(0),s+=BigInt(1),a()):(n=i^BigInt(this.DBL_HIDDEN),a()))}{const t=BigInt(1)<<BigInt(1074)-s,e=BigInt(2)*t-BigInt(1);let i=r,o=i&e;return i^=o,o<t||o==t&&0==(t==this.LTOP_BIT?1&n:i&2*t)?(r=i,a()):(i+=BigInt(2)*t,r=i,i%(BigInt(1)<<BigInt(32))==0?(i=n+BigInt(1),i==this.DBL_HIDDEN?(n=BigInt(0),s+=BigInt(1),a()):(u.ieee.mantissa0=i,a())):a())}}}const Ae=Uint32Array.of(0,32,33,36,37,40,41,42,43,44,45,46,48,58,60,63,65,91,92,93,94,95,96,97,123,124,125,126,127,160,161,162,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,184,185,186,187,188,191,192,215,216,223,224,247,248,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,428,429,430,431,432,433,435,436,437,438,439,440,441,442,443,444,445,446,447,448,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,570,571,572,573,574,575,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,600,601,602,603,604,605,608,609,610,611,612,613,614,615,616,617,618,619,620,621,623,624,625,626,627,629,630,637,638,640,641,642,643,644,647,648,649,650,652,653,658,659,660,661,669,670,671,688,706,710,722,736,741,748,749,750,751,768,837,838,880,881,882,883,884,885,886,887,890,891,894,895,900,902,903,904,908,910,912,913,940,941,944,945,962,963,972,973,975,976,977,978,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1ee3,8008,8016,8017,8018,8019,8020,8021,8022,8023,8025,8032,8040,8048,8050,8054,8056,8058,8060,8064,8072,8080,8088,8096,8104,8112,8114,8115,8116,8120,8122,8124,8125,8126,8127,8130,8131,8132,8136,8140,8141,8144,8146,8152,8154,8157,8160,8162,8165,8166,8168,8170,8172,8173,8178,8179,8180,8184,8186,8188,8189,8192,8203,8208,8214,8216,8217,8218,8219,8221,8222,8223,8224,8232,8233,8234,8239,8240,8249,8250,8251,8255,8257,8260,8261,8262,8263,8274,8275,8276,8277,8287,8288,8304,8305,8308,8314,8317,8318,8319,8320,8330,8333,8334,8336,8352,8400,8413,8417,8418,8421,8448,8450,8451,8455,8456,8458,8459,8462,8464,8467,8468,8469,8470,8472,8473,8478,8484,8485,8486,8487,8488,8489,8490,8491,8492,8494,8495,8496,8498,8499,8500,8501,8505,8506,8508,8510,8512,8517,8518,8522,8523,8524,8526,8527,8528,8544,8560,8576,8579,8580,8581,8585,8586,8592,8597,8602,8604,8608,8609,8611,8612,8614,8615,8622,8623,8654,8656,8658,8659,8660,8661,8692,8960,8968,8969,8970,8971,8972,8992,8994,9001,9002,9003,9084,9085,9115,9140,9180,9186,9312,9372,9398,9424,9450,9472,9655,9656,9665,9666,9720,9728,9839,9840,10088,10089,10090,10091,10092,10093,10094,10095,10096,10097,10098,10099,10100,10101,10102,10132,10176,10181,10182,10183,10214,10215,10216,10217,10218,10219,10220,10221,10222,10223,10224,10240,10496,10627,10628,10629,10630,10631,10632,10633,10634,10635,10636,10637,10638,10639,10640,10641,10642,10643,10644,10645,10646,10647,10648,10649,10712,10713,10714,10715,10716,10748,10749,10750,11008,11056,11077,11079,11085,11264,11312,11360,11361,11362,11363,11364,11365,11366,11367,11368,11369,11370,11371,11372,11373,11374,11375,11376,11377,11378,11379,11380,11381,11382,11383,11388,11390,11392,11393,11394,11395,11396,11397,11398,11399,11400,11401,11402,11403,11404,11405,11406,11407,11408,11409,11410,11411,11412,11413,11414,11415,11416,11417,11418,11419,11420,11421,11422,11423,11424,11425,11426,11427,11428,11429,11430,11431,11432,11433,11434,11435,11436,11437,11438,11439,11440,11441,11442,11443,11444,11445,11446,11447,11448,11449,11450,11451,11452,11453,11454,11455,11456,11457,11458,11459,11460,11461,11462,11463,11464,11465,11466,11467,11468,11469,11470,11471,11472,11473,11474,11475,11476,11477,11478,11479,11480,11481,11482,11483,11484,11485,11486,11487,11488,11489,11490,11491,11492,11493,11499,11500,11501,11502,11503,11506,11507,11513,11517,11518,11520,11568,11631,11632,11647,11648,11744,11776,11778,11779,11780,11781,11782,11785,11786,11787,11788,11789,11790,11799,11800,11802,11803,11804,11805,11806,11808,11809,11810,11811,11812,11813,11814,11815,11816,11817,11818,11823,11824,11834,11836,11840,11841,11842,11843,11904,12288,12289,12292,12293,12294,12295,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,12306,12308,12309,12310,12311,12312,12313,12314,12315,12316,12317,12318,12320,12321,12330,12334,12336,12337,12342,12344,12347,12348,12349,12350,12353,12441,12443,12445,12447,12448,12449,12539,12540,12543,12688,12690,12694,12704,12736,12784,12800,12832,12842,12872,12880,12881,12896,12928,12938,12977,12992,13312,19904,19968,40981,40982,42128,42192,42232,42238,42240,42508,42509,42512,42528,42538,42560,42561,42562,42563,42564,42565,42566,42567,42568,42569,42570,42571,42572,42573,42574,42575,42576,42577,42578,42579,42580,42581,42582,42583,42584,42585,42586,42587,42588,42589,42590,42591,42592,42593,42594,42595,42596,42597,42598,42599,42600,42601,42602,42603,42604,42605,42606,42607,42608,42611,42612,42622,42623,42624,42625,42626,42627,42628,42629,42630,42631,42632,42633,42634,42635,42636,42637,42638,42639,42640,42641,42642,42643,42644,42645,42646,42647,42648,42649,42650,42651,42652,42654,42656,42726,42736,42738,42752,42775,42784,42786,42787,42788,42789,42790,42791,42792,42793,42794,42795,42796,42797,42798,42799,42800,42802,42803,42804,42805,42806,42807,42808,42809,42810,42811,42812,42813,42814,42815,42816,42817,42818,42819,42820,42821,42822,42823,42824,42825,42826,42827,42828,42829,42830,42831,42832,42833,42834,42835,42836,42837,42838,42839,42840,42841,42842,42843,42844,42845,42846,42847,42848,42849,42850,42851,42852,42853,42854,42855,42856,42857,42858,42859,42860,42861,42862,42863,42864,42865,42873,42874,42875,42876,42877,42878,42879,42880,42881,42882,42883,42884,42885,42886,42887,42888,42889,42891,42892,42893,42894,42895,42896,42897,42898,42899,42900,42901,42902,42903,42904,42905,42906,42907,42908,42909,42910,42911,42912,42913,42914,42915,42916,42917,42918,42919,42920,42921,42922,42923,42924,42925,42926,42927,42928,42929,42930,42931,42932,42933,42934,42935,42936,42937,42938,42939,42940,42941,42942,42943,42946,42947,42948,42949,42950,42999,43e3,43002,43003,43010,43011,43014,43015,43019,43020,43043,43045,43047,43048,43056,43062,43064,43065,43072,43124,43136,43138,43188,43204,43214,43216,43232,43250,43256,43259,43260,43261,43263,43264,43274,43302,43310,43312,43335,43346,43359,43360,43392,43395,43396,43443,43444,43446,43450,43452,43453,43457,43471,43472,43486,43488,43493,43494,43495,43504,43514,43561,43567,43569,43571,43573,43584,43587,43588,43596,43597,43600,43612,43616,43632,43633,43639,43642,43643,43644,43645,43646,43696,43697,43698,43701,43703,43705,43710,43712,43713,43714,43741,43742,43744,43755,43756,43758,43760,43762,43763,43765,43766,43777,43824,43859,43860,43867,43868,43872,43888,43968,44003,44005,44006,44008,44009,44011,44012,44013,44016,44032,64256,64285,64286,64287,64297,64298,64434,64467,64830,64831,64848,65020,65021,65024,65040,65047,65048,65049,65056,65072,65073,65075,65077,65078,65079,65080,65081,65082,65083,65084,65085,65086,65087,65088,65089,65090,65091,65092,65093,65095,65096,65097,65101,65104,65112,65113,65114,65115,65116,65117,65118,65119,65122,65123,65124,65128,65129,65130,65136,65279,65281,65284,65285,65288,65289,65290,65291,65292,65293,65294,65296,65306,65308,65311,65313,65339,65340,65341,65342,65343,65344,65345,65371,65372,65373,65374,65375,65376,65377,65378,65379,65380,65382,65392,65393,65438,65440,65504,65506,65507,65508,65509,65512,65513,65517,65529,65532,65536,65792,65799,65847,65856,65909,65913,65930,65932,66045,66176,66272,66273,66304,66336,66349,66369,66370,66378,66384,66422,66432,66463,66464,66512,66513,66560,66600,66640,66720,66736,66776,66816,66927,67072,67671,67672,67680,67703,67705,67712,67751,67808,67835,67840,67862,67871,67872,67903,67968,68028,68030,68032,68096,68097,68112,68152,68160,68176,68192,68221,68223,68224,68253,68288,68296,68297,68325,68331,68336,68352,68409,68416,68440,68448,68472,68480,68505,68521,68608,68736,68800,68858,68864,68900,68912,69216,69376,69405,69415,69446,69457,69461,69600,69632,69633,69634,69635,69688,69703,69714,69734,69759,69762,69763,69808,69811,69815,69817,69819,69821,69822,69837,69840,69872,69888,69891,69927,69932,69933,69942,69952,69956,69957,69968,70003,70004,70006,70016,70018,70019,70067,70070,70079,70081,70085,70089,70093,70096,70106,70107,70108,70109,70113,70144,70188,70191,70194,70196,70197,70198,70200,70206,70272,70313,70320,70367,70368,70371,70384,70400,70402,70405,70459,70461,70462,70464,70465,70480,70487,70493,70498,70502,70656,70709,70712,70720,70722,70725,70726,70727,70731,70736,70747,70750,70751,70832,70835,70841,70842,70843,70847,70849,70850,70852,70854,70855,70864,71040,71087,71090,71096,71100,71102,71103,71105,71128,71132,71168,71216,71219,71227,71229,71230,71231,71233,71236,71248,71264,71296,71339,71340,71341,71342,71344,71350,71351,71352,71360,71424,71453,71456,71458,71462,71463,71472,71482,71484,71487,71680,71724,71727,71736,71737,71739,71840,71872,71904,71914,71935,72145,72146,72147,72148,72156,72160,72161,72164,72192,72193,72203,72243,72249,72250,72251,72255,72263,72272,72273,72279,72281,72284,72330,72343,72344,72346,72349,72350,72384,72751,72752,72766,72767,72768,72769,72784,72794,72816,72818,72850,72873,72874,72881,72882,72884,72885,72960,73009,73030,73031,73040,73056,73098,73104,73107,73109,73110,73111,73112,73120,73440,73459,73461,73463,73664,73685,73693,73697,73727,73728,74752,74864,74880,78896,82944,92768,92782,92880,92912,92917,92928,92976,92983,92988,92992,92996,92997,93008,93019,93027,93760,93792,93824,93847,93952,94031,94032,94033,94095,94099,94178,94179,94208,113820,113821,113823,113824,118784,119141,119143,119146,119149,119155,119163,119171,119173,119180,119210,119214,119362,119365,119520,119552,119648,119808,119834,119860,119886,119912,119938,119964,119990,120016,120042,120068,120094,120120,120146,120172,120198,120224,120250,120276,120302,120328,120354,120380,120406,120432,120458,120488,120513,120514,120539,120540,120546,120571,120572,120597,120598,120604,120629,120630,120655,120656,120662,120687,120688,120713,120714,120720,120745,120746,120771,120772,120778,120779,120782,120832,121344,121399,121403,121453,121461,121462,121476,121477,121479,121499,123136,123184,123191,123200,123214,123628,123632,123647,124928,125127,125136,125184,125218,125252,125264,125278,126065,126124,126125,126128,126129,126254,126255,126464,126704,126976,127232,127248,127995,128e3,131072,917505,917760),Ne=Uint32Array.of(31,32,35,36,39,40,41,42,43,44,45,47,57,59,62,64,90,91,92,93,94,95,96,122,123,124,125,126,159,160,161,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,183,184,185,186,187,190,191,214,215,222,223,246,247,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,427,428,429,430,431,432,434,435,436,437,438,439,440,441,442,443,444,445,446,447,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,569,570,571,572,573,574,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,600,601,602,603,604,607,608,609,610,611,612,613,614,615,616,617,618,619,620,622,623,624,625,626,628,629,636,637,639,640,641,642,643,646,647,648,649,651,652,657,658,659,660,668,669,670,687,705,709,721,735,740,747,748,749,750,767,836,837,879,880,881,882,883,884,885,886,887,890,893,894,895,901,902,903,906,908,911,912,939,940,943,944,961,962,971,972,974,975,976,977,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1e3,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1023,1039,1071,1103,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1159,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326,1327,1366,1369,1375,1376,1414,1416,1417,1418,1422,1423,1469,1470,1471,1472,1474,1475,1477,1478,1479,1522,1524,1541,1544,1546,1547,1549,1551,1562,1563,1564,1567,1599,1600,1610,1631,1641,1645,1647,1648,1747,1748,1749,1756,1757,1758,1764,1766,1768,1769,1773,1775,1785,1788,1790,1791,1805,1807,1808,1809,1839,1866,1957,1968,1969,1993,2026,2035,2037,2038,2041,2042,2045,2047,2069,2073,2074,2083,2084,2087,2088,2093,2110,2136,2139,2142,2237,2273,2274,2306,2307,2361,2362,2363,2364,2365,2368,2376,2380,2381,2383,2384,2391,2401,2403,2405,2415,2416,2417,2432,2433,2435,2489,2492,2493,2496,2500,2508,2509,2510,2519,2529,2531,2543,2545,2547,2553,2554,2555,2556,2557,2562,2563,2617,2620,2624,2641,2654,2671,2673,2676,2677,2678,2690,2691,2745,2748,2749,2752,2760,2764,2765,2785,2787,2799,2800,2801,2809,2817,2819,2873,2876,2877,2878,2879,2880,2884,2892,2902,2903,2913,2915,2927,2928,2929,2935,2946,3001,3007,3008,3020,3021,3024,3031,3055,3058,3064,3065,3066,3072,3075,3076,3133,3136,3140,3158,3169,3171,3183,3191,3198,3199,3200,3201,3203,3204,3257,3260,3261,3262,3263,3268,3270,3275,3277,3286,3297,3299,3311,3314,3329,3331,3386,3388,3389,3392,3396,3404,3405,3406,3407,3414,3415,3422,3425,3427,3439,3448,3449,3455,3459,3526,3530,3537,3542,3551,3567,3571,3572,3632,3633,3635,3642,3647,3653,3654,3662,3663,3673,3675,3760,3761,3763,3772,3780,3782,3789,3801,3840,3843,3858,3859,3860,3863,3865,3871,3881,3891,3892,3893,3894,3895,3896,3897,3898,3899,3900,3901,3903,3948,3966,3967,3972,3973,3975,3980,4028,4037,4038,4047,4052,4056,4058,4138,4140,4144,4145,4151,4152,4154,4156,4158,4159,4169,4175,4181,4183,4185,4189,4192,4193,4196,4198,4205,4208,4212,4225,4226,4228,4230,4236,4237,4238,4239,4249,4252,4253,4255,4301,4346,4347,4348,4351,4954,4959,4968,4988,5007,5017,5103,5109,5117,5120,5740,5742,5759,5760,5786,5787,5788,5866,5869,5872,5905,5908,5937,5940,5942,5969,5971,6e3,6003,6067,6069,6070,6077,6085,6086,6088,6099,6102,6103,6106,6107,6108,6109,6121,6137,6149,6150,6154,6157,6158,6169,6210,6211,6276,6278,6312,6313,6430,6434,6438,6440,6449,6450,6456,6459,6464,6469,6479,6601,6617,6618,6655,6678,6680,6682,6683,6687,6740,6741,6742,6743,6752,6753,6754,6756,6764,6770,6783,6809,6822,6823,6829,6845,6846,6915,6916,6963,6964,6965,6970,6971,6972,6977,6978,6980,6987,7001,7008,7018,7027,7036,7041,7042,7072,7073,7077,7079,7081,7082,7085,7087,7097,7141,7142,7143,7145,7148,7149,7150,7153,7155,7167,7203,7211,7219,7221,7223,7231,7241,7247,7257,7287,7293,7295,7296,7297,7298,7300,7301,7302,7303,7304,7359,7367,7378,7379,7392,7393,7400,7404,7405,7411,7412,7414,7415,7417,7418,7467,7530,7543,7544,7545,7548,7549,7565,7566,7578,7615,7679,7680,7681,7682,7683,7684,7685,7686,7687,7688,7689,7690,7691,7692,7693,7694,7695,7696,7697,7698,7699,7700,7701,7702,7703,7704,7705,7706,7707,7708,7709,7710,7711,7712,7713,7714,7715,7716,7717,7718,7719,7720,7721,7722,7723,7724,7725,7726,7727,7728,7729,7730,7731,7732,7733,7734,7735,7736,7737,7738,7739,7740,7741,7742,7743,7744,7745,7746,7747,7748,7749,7750,7751,7752,7753,7754,7755,7756,7757,7758,7759,7760,7761,7762,7763,7764,7765,7766,7767,7768,7769,7770,7771,7772,7773,7774,7775,7776,7777,7778,7779,7780,7781,7782,7783,7784,7785,7786,7787,7788,7789,7790,7791,7792,7793,7794,7795,7796,7797,7798,7799,7800,7801,7802,7803,7804,7805,7806,7807,7808,7809,7810,7811,7812,7813,7814,7815,7816,7817,7818,7819,7820,7821,7822,7823,7824,7825,7826,7827,7828,7829,7834,7835,7837,7838,7839,7840,7841,7842,7843,7844,7845,7846,7847,7848,7849,7850,7851,7852,7853,7854,7855,7856,7857,7858,7859,7860,7861,7862,7863,7864,7865,7866,7867,7868,7869,7870,7871,7872,7873,7874,7875,7876,7877,7878,7879,7880,7881,7882,7883,7884,7885,7886,7887,7888,7889,7890,7891,7892,7893,7894,7895,7896,7897,7898,7899,7900,7901,7902,7903,7904,7905,7906,7907,7908,7909,7910,7911,7912,7913,7914,7915,7916,7917,7918,7919,7920,7921,7922,7923,7924,7925,7926,7927,7928,7929,7930,7931,7932,7933,7934,7935,7943,7951,7957,7965,7975,7983,7991,7999,8005,8013,8016,8017,8018,8019,8020,8021,8022,8023,8031,8039,8047,8049,8053,8055,8057,8059,8061,8071,8079,8087,8095,8103,8111,8113,8114,8115,8119,8121,8123,8124,8125,8126,8129,8130,8131,8135,8139,8140,8143,8145,8151,8153,8155,8159,8161,8164,8165,8167,8169,8171,8172,8175,8178,8179,8183,8185,8187,8188,8190,8202,8207,8213,8215,8216,8217,8218,8220,8221,8222,8223,8231,8232,8233,8238,8239,8248,8249,8250,8254,8256,8259,8260,8261,8262,8273,8274,8275,8276,8286,8287,8303,8304,8305,8313,8316,8317,8318,8319,8329,8332,8333,8334,8348,8383,8412,8416,8417,8420,8432,8449,8450,8454,8455,8457,8458,8461,8463,8466,8467,8468,8469,8471,8472,8477,8483,8484,8485,8486,8487,8488,8489,8490,8491,8493,8494,8495,8497,8498,8499,8500,8504,8505,8507,8509,8511,8516,8517,8521,8522,8523,8525,8526,8527,8543,8559,8575,8578,8579,8580,8584,8585,8587,8596,8601,8603,8607,8608,8610,8611,8613,8614,8621,8622,8653,8655,8657,8658,8659,8660,8691,8959,8967,8968,8969,8970,8971,8991,8993,9e3,9001,9002,9083,9084,9114,9139,9179,9185,9290,9371,9397,9423,9449,9471,9654,9655,9664,9665,9719,9727,9838,9839,10087,10088,10089,10090,10091,10092,10093,10094,10095,10096,10097,10098,10099,10100,10101,10131,10175,10180,10181,10182,10213,10214,10215,10216,10217,10218,10219,10220,10221,10222,10223,10239,10495,10626,10627,10628,10629,10630,10631,10632,10633,10634,10635,10636,10637,10638,10639,10640,10641,10642,10643,10644,10645,10646,10647,10648,10711,10712,10713,10714,10715,10747,10748,10749,11007,11055,11076,11078,11084,11263,11310,11358,11360,11361,11362,11363,11364,11365,11366,11367,11368,11369,11370,11371,11372,11373,11374,11375,11376,11377,11378,11379,11380,11381,11382,11387,11389,11391,11392,11393,11394,11395,11396,11397,11398,11399,11400,11401,11402,11403,11404,11405,11406,11407,11408,11409,11410,11411,11412,11413,11414,11415,11416,11417,11418,11419,11420,11421,11422,11423,11424,11425,11426,11427,11428,11429,11430,11431,11432,11433,11434,11435,11436,11437,11438,11439,11440,11441,11442,11443,11444,11445,11446,11447,11448,11449,11450,11451,11452,11453,11454,11455,11456,11457,11458,11459,11460,11461,11462,11463,11464,11465,11466,11467,11468,11469,11470,11471,11472,11473,11474,11475,11476,11477,11478,11479,11480,11481,11482,11483,11484,11485,11486,11487,11488,11489,11490,11491,11492,11498,11499,11500,11501,11502,11505,11506,11507,11516,11517,11519,11565,11623,11631,11632,11647,11742,11775,11777,11778,11779,11780,11781,11784,11785,11786,11787,11788,11789,11798,11799,11801,11802,11803,11804,11805,11807,11808,11809,11810,11811,11812,11813,11814,11815,11816,11817,11822,11823,11833,11835,11839,11840,11841,11842,11855,12283,12288,12291,12292,12293,12294,12295,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,12307,12308,12309,12310,12311,12312,12313,12314,12315,12316,12317,12319,12320,12329,12333,12335,12336,12341,12343,12346,12347,12348,12349,12351,12438,12442,12444,12446,12447,12448,12538,12539,12542,12686,12689,12693,12703,12730,12771,12799,12830,12841,12871,12879,12880,12895,12927,12937,12976,12991,13311,19893,19967,40980,40981,42124,42182,42231,42237,42239,42507,42508,42511,42527,42537,42539,42560,42561,42562,42563,42564,42565,42566,42567,42568,42569,42570,42571,42572,42573,42574,42575,42576,42577,42578,42579,42580,42581,42582,42583,42584,42585,42586,42587,42588,42589,42590,42591,42592,42593,42594,42595,42596,42597,42598,42599,42600,42601,42602,42603,42604,42605,42606,42607,42610,42611,42621,42622,42623,42624,42625,42626,42627,42628,42629,42630,42631,42632,42633,42634,42635,42636,42637,42638,42639,42640,42641,42642,42643,42644,42645,42646,42647,42648,42649,42650,42651,42653,42655,42725,42735,42737,42743,42774,42783,42785,42786,42787,42788,42789,42790,42791,42792,42793,42794,42795,42796,42797,42798,42799,42801,42802,42803,42804,42805,42806,42807,42808,42809,42810,42811,42812,42813,42814,42815,42816,42817,42818,42819,42820,42821,42822,42823,42824,42825,42826,42827,42828,42829,42830,42831,42832,42833,42834,42835,42836,42837,42838,42839,42840,42841,42842,42843,42844,42845,42846,42847,42848,42849,42850,42851,42852,42853,42854,42855,42856,42857,42858,42859,42860,42861,42862,42863,42864,42872,42873,42874,42875,42876,42877,42878,42879,42880,42881,42882,42883,42884,42885,42886,42887,42888,42890,42891,42892,42893,42894,42895,42896,42897,42898,42899,42900,42901,42902,42903,42904,42905,42906,42907,42908,42909,42910,42911,42912,42913,42914,42915,42916,42917,42918,42919,42920,42921,42922,42923,42924,42925,42926,42927,42928,42929,42930,42931,42932,42933,42934,42935,42936,42937,42938,42939,42940,42941,42942,42943,42946,42947,42948,42949,42950,42999,43001,43002,43009,43010,43013,43014,43018,43019,43042,43044,43046,43047,43051,43061,43063,43064,43065,43123,43127,43137,43187,43203,43205,43215,43225,43249,43255,43258,43259,43260,43262,43263,43273,43301,43309,43311,43334,43345,43347,43359,43388,43394,43395,43442,43443,43445,43449,43451,43452,43456,43469,43471,43481,43487,43492,43493,43494,43503,43513,43560,43566,43568,43570,43572,43574,43586,43587,43595,43596,43597,43609,43615,43631,43632,43638,43641,43642,43643,43644,43645,43695,43696,43697,43700,43702,43704,43709,43711,43712,43713,43740,43741,43743,43754,43755,43757,43759,43761,43762,43764,43765,43766,43822,43858,43859,43866,43867,43871,43879,43967,44002,44004,44005,44007,44008,44010,44011,44012,44013,44025,64217,64279,64285,64286,64296,64297,64433,64449,64829,64830,64831,65019,65020,65021,65039,65046,65047,65048,65049,65071,65072,65074,65076,65077,65078,65079,65080,65081,65082,65083,65084,65085,65086,65087,65088,65089,65090,65091,65092,65094,65095,65096,65100,65103,65111,65112,65113,65114,65115,65116,65117,65118,65121,65122,65123,65126,65128,65129,65131,65276,65279,65283,65284,65287,65288,65289,65290,65291,65292,65293,65295,65305,65307,65310,65312,65338,65339,65340,65341,65342,65343,65344,65370,65371,65372,65373,65374,65375,65376,65377,65378,65379,65381,65391,65392,65437,65439,65500,65505,65506,65507,65508,65510,65512,65516,65518,65531,65533,65786,65794,65843,65855,65908,65912,65929,65931,66044,66045,66256,66272,66299,66335,66339,66368,66369,66377,66378,66421,66426,66461,66463,66511,66512,66517,66599,66639,66717,66729,66771,66811,66915,66927,67669,67671,67679,67702,67704,67711,67742,67759,67829,67839,67861,67867,67871,67897,67903,68023,68029,68031,68095,68096,68111,68149,68159,68168,68184,68220,68222,68223,68252,68255,68295,68296,68324,68326,68335,68342,68405,68415,68437,68447,68466,68479,68497,68508,68527,68680,68786,68850,68863,68899,68903,68921,69246,69404,69414,69445,69456,69460,69465,69622,69632,69633,69634,69687,69702,69709,69733,69743,69761,69762,69807,69810,69814,69816,69818,69820,69821,69825,69837,69864,69881,69890,69926,69931,69932,69940,69951,69955,69956,69958,70002,70003,70005,70006,70017,70018,70066,70069,70078,70080,70084,70088,70092,70093,70105,70106,70107,70108,70111,70132,70187,70190,70193,70195,70196,70197,70199,70205,70206,70312,70313,70366,70367,70370,70378,70393,70401,70403,70457,70460,70461,70463,70464,70477,70480,70487,70497,70499,70516,70708,70711,70719,70721,70724,70725,70726,70730,70735,70745,70749,70750,70831,70834,70840,70841,70842,70846,70848,70849,70851,70853,70854,70855,70873,71086,71089,71093,71099,71101,71102,71104,71127,71131,71133,71215,71218,71226,71228,71229,71230,71232,71235,71236,71257,71276,71338,71339,71340,71341,71343,71349,71350,71351,71352,71369,71450,71455,71457,71461,71462,71467,71481,71483,71486,71487,71723,71726,71735,71736,71738,71739,71871,71903,71913,71922,72144,72145,72146,72147,72155,72159,72160,72163,72164,72192,72202,72242,72248,72249,72250,72254,72262,72263,72272,72278,72280,72283,72329,72342,72343,72345,72348,72349,72354,72750,72751,72765,72766,72767,72768,72773,72793,72812,72817,72847,72871,72873,72880,72881,72883,72884,72886,73008,73029,73030,73031,73049,73097,73102,73105,73108,73109,73110,73111,73112,73129,73458,73460,73462,73464,73684,73692,73696,73713,73727,74649,74862,74868,78894,78904,92766,92777,92783,92909,92916,92917,92975,92982,92987,92991,92995,92996,92997,93017,93025,93071,93791,93823,93846,93850,94026,94031,94032,94087,94098,94177,94178,94179,113817,113820,113822,113823,113827,119140,119142,119145,119148,119154,119162,119170,119172,119179,119209,119213,119361,119364,119365,119539,119638,119672,119833,119859,119885,119911,119937,119963,119989,120015,120041,120067,120092,120119,120144,120171,120197,120223,120249,120275,120301,120327,120353,120379,120405,120431,120457,120485,120512,120513,120538,120539,120545,120570,120571,120596,120597,120603,120628,120629,120654,120655,120661,120686,120687,120712,120713,120719,120744,120745,120770,120771,120777,120778,120779,120831,121343,121398,121402,121452,121460,121461,121475,121476,121478,121483,122922,123180,123190,123197,123209,123627,123631,123641,123647,125124,125135,125142,125217,125251,125258,125273,125279,126123,126124,126127,126128,126253,126254,126269,126651,126705,127221,127244,127994,127999,129685,195101,917631,917999),Pe=Uint8Array.of(0,1,2,3,2,4,5,2,6,2,7,2,8,2,6,2,9,4,2,5,10,11,10,12,4,6,5,6,0,1,2,3,13,2,10,13,14,15,6,16,13,10,13,6,17,10,18,2,10,17,14,19,17,2,9,6,9,20,12,6,12,21,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,24,25,22,23,22,23,22,23,20,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,20,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,26,22,23,22,23,22,23,27,28,29,22,23,22,23,30,22,23,31,22,23,20,32,33,34,22,23,31,35,36,37,38,22,23,39,20,37,40,41,42,22,23,22,23,22,23,43,22,23,43,20,22,23,43,22,23,44,22,23,22,23,45,22,23,20,14,22,23,20,46,14,47,48,49,47,48,49,47,48,49,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,50,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,20,47,48,49,22,23,51,52,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,53,20,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,20,54,22,23,55,56,57,22,23,58,59,60,22,23,22,23,22,23,22,23,22,23,61,62,63,64,65,20,66,20,67,20,68,69,20,66,70,20,71,20,72,73,20,74,75,73,76,77,20,75,20,78,79,20,80,20,81,20,82,20,83,82,20,84,82,85,86,87,20,88,20,14,20,89,90,20,91,10,91,10,91,10,91,10,91,10,92,93,92,22,23,22,23,91,10,22,23,91,41,2,94,10,95,2,96,97,98,20,9,99,100,20,12,101,12,102,103,104,105,106,107,108,109,110,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,111,112,113,114,115,116,6,22,23,117,22,23,20,53,118,9,12,112,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,13,92,119,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,120,22,23,22,23,22,23,22,23,22,23,22,23,22,23,121,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,122,91,2,20,123,20,2,7,13,3,92,7,92,2,92,2,92,2,92,14,2,16,6,2,3,2,13,92,2,16,2,14,91,14,92,8,2,14,92,14,2,14,92,16,13,92,91,92,13,92,14,8,14,13,14,2,16,14,92,14,92,14,92,14,8,14,92,91,13,2,91,92,3,14,92,91,92,91,92,91,92,2,14,92,2,14,92,16,92,124,14,92,124,92,14,124,92,124,92,124,14,92,14,92,2,8,2,91,14,92,124,14,92,14,124,92,124,92,14,124,14,92,8,14,3,17,13,3,14,2,92,124,14,92,124,92,14,8,92,14,92,2,92,124,14,92,14,124,92,124,92,14,92,8,2,3,14,92,124,14,92,14,124,92,124,92,124,92,124,14,92,8,13,14,17,92,14,124,92,124,92,14,124,8,17,13,3,13,92,124,92,14,92,124,92,14,92,8,2,17,13,14,92,124,2,14,92,14,124,92,124,92,124,92,124,14,92,8,14,92,124,14,92,14,124,92,124,92,14,13,14,124,17,14,92,8,17,13,14,124,14,92,124,92,124,8,124,2,14,92,14,92,3,14,91,92,2,8,2,14,92,14,92,14,91,92,8,14,13,2,13,2,13,92,13,8,17,13,92,13,92,13,92,4,5,4,5,124,14,92,124,92,2,92,14,92,13,92,13,2,13,2,14,124,92,124,92,124,92,124,92,14,8,2,14,124,92,14,92,14,124,14,124,14,92,14,92,124,92,124,92,14,124,8,124,92,13,125,126,2,91,126,14,92,2,17,14,13,127,104,110,7,14,2,14,1,14,4,5,14,2,128,14,92,14,92,2,14,92,14,92,14,92,124,92,124,92,124,92,2,91,2,3,14,92,8,17,2,7,2,92,16,8,14,91,14,92,14,92,14,92,124,92,124,92,124,92,13,2,8,14,8,17,13,14,92,124,92,2,14,124,92,124,92,124,92,124,92,124,92,8,2,91,2,92,119,92,124,14,92,124,92,124,92,124,92,124,14,8,2,13,92,13,92,124,14,124,92,124,92,124,92,14,8,14,92,124,92,124,92,124,92,124,2,14,124,92,124,92,2,8,14,8,14,91,2,129,130,131,132,133,134,135,136,137,2,92,2,92,124,92,14,92,14,92,14,124,92,14,20,91,20,91,138,20,139,20,140,20,91,92,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,20,141,20,142,20,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,143,144,143,144,143,144,143,144,143,144,20,143,20,143,20,143,20,143,144,143,144,145,146,147,148,149,150,143,151,143,151,143,151,143,20,152,20,144,153,154,10,155,10,20,152,20,156,154,10,143,20,144,157,10,143,20,113,20,144,158,117,10,20,152,20,159,160,154,10,1,16,7,2,15,19,4,15,19,4,15,2,161,162,16,1,2,15,19,2,11,2,6,4,5,2,6,2,11,2,1,16,17,91,17,6,4,5,91,17,6,4,5,91,3,92,119,92,119,92,13,107,13,107,13,20,107,20,107,20,13,107,13,6,107,13,107,13,163,13,107,13,164,165,107,13,20,107,166,107,20,14,20,13,20,107,6,107,20,13,6,13,167,13,17,168,169,128,22,23,128,17,13,6,13,6,13,6,13,6,13,6,13,6,13,6,13,6,13,6,13,6,13,4,5,4,5,13,6,13,4,5,13,6,13,6,13,6,13,17,13,170,171,17,13,6,13,6,13,6,13,6,13,4,5,4,5,4,5,4,5,4,5,4,5,4,5,17,13,6,4,5,6,4,5,4,5,4,5,4,5,4,5,6,13,6,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,6,4,5,4,5,6,4,5,6,13,6,13,6,13,122,123,22,23,172,173,174,175,176,22,23,22,23,22,23,177,178,179,180,20,22,23,20,22,23,20,91,181,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,20,13,22,23,22,23,92,22,23,2,17,2,182,14,91,2,92,14,92,2,15,19,15,19,2,15,19,2,15,19,2,7,2,7,2,15,19,2,15,19,4,5,4,5,4,5,4,5,2,91,2,7,2,7,2,4,2,13,1,2,13,91,14,128,4,5,4,5,4,5,4,5,4,5,13,4,5,4,5,4,5,4,5,7,4,5,13,128,92,124,7,91,13,128,91,14,2,13,14,92,10,91,14,7,14,2,91,14,13,17,13,14,13,14,13,17,13,17,13,17,13,17,13,17,13,14,13,14,91,14,13,14,91,2,14,91,2,14,8,14,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,14,92,119,2,92,2,91,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,91,92,14,128,92,2,10,91,10,22,23,22,23,22,23,22,23,22,23,22,23,22,23,20,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,91,20,22,23,22,23,183,22,23,22,23,22,23,22,23,22,23,91,10,22,23,184,20,14,22,23,22,23,185,20,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,186,187,188,189,186,20,190,191,192,193,22,23,22,23,22,23,22,23,22,23,22,23,22,23,194,195,196,14,91,20,14,92,14,92,14,92,14,124,92,124,13,17,13,3,13,14,2,124,14,124,92,2,8,92,14,2,14,2,14,92,8,14,92,2,14,92,124,2,14,92,124,14,92,124,92,124,92,124,2,91,8,2,14,92,91,14,8,14,92,124,92,124,92,14,92,14,92,124,8,2,14,91,14,13,14,124,92,124,14,92,14,92,14,92,14,92,14,92,14,91,2,14,124,92,124,2,14,91,124,92,14,20,197,20,10,91,20,198,14,124,92,124,92,124,2,124,92,8,14,20,14,92,14,6,14,10,14,5,4,14,3,13,92,2,4,5,2,92,2,7,11,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,2,4,5,2,11,2,7,4,5,4,5,4,5,2,6,7,6,2,3,2,14,16,2,3,2,4,5,2,6,2,7,2,8,2,6,2,9,4,2,5,10,11,10,12,4,6,5,6,4,5,2,4,5,2,14,91,14,91,14,3,6,10,13,3,13,6,13,16,13,14,2,17,13,128,17,13,17,13,92,14,92,17,14,17,14,128,14,128,14,92,14,2,14,2,128,199,200,14,8,199,200,14,2,14,2,17,14,13,17,14,17,14,17,14,17,2,14,2,14,17,14,17,14,92,14,92,17,2,14,17,2,14,17,14,13,14,92,17,2,14,2,14,17,14,17,14,2,17,14,97,102,17,14,92,8,17,14,17,14,92,17,2,14,124,92,124,14,92,2,17,8,92,124,14,124,92,124,92,2,16,2,16,14,8,92,14,92,124,92,8,2,14,124,14,92,2,14,92,124,14,124,92,124,14,2,92,2,8,14,2,14,2,17,14,124,92,124,92,124,92,2,92,14,2,14,92,124,92,8,92,124,14,92,14,124,92,124,14,124,14,124,92,14,124,92,124,92,124,92,14,2,8,2,92,14,124,92,124,92,124,92,124,92,14,2,14,8,14,124,92,124,92,124,92,2,14,92,14,124,92,124,92,124,92,2,14,8,2,14,92,124,92,124,92,124,92,14,8,14,92,124,92,124,92,8,17,2,13,14,124,92,124,92,2,9,12,8,17,14,124,92,124,92,124,92,14,124,14,92,14,92,124,14,92,2,92,14,92,124,92,14,92,124,92,2,14,2,14,124,92,124,92,14,2,8,17,2,14,92,124,92,124,92,124,92,14,92,14,92,8,14,124,92,124,92,124,92,14,8,14,92,124,2,17,13,3,13,2,14,128,2,14,16,14,8,2,14,92,2,14,92,2,13,91,2,13,8,17,14,9,12,17,2,14,92,14,124,92,91,2,91,14,13,92,2,16,13,124,92,13,124,16,92,13,92,13,92,13,92,13,17,13,17,107,20,107,20,107,20,107,20,107,20,107,20,107,20,107,20,107,20,107,20,107,20,107,20,107,20,107,6,20,6,20,107,6,20,6,20,107,6,20,6,20,107,6,20,6,20,107,6,20,6,20,107,20,8,13,92,13,92,13,92,13,92,13,2,92,14,92,91,8,14,92,8,3,14,17,92,201,202,92,8,2,17,13,17,3,17,13,17,14,6,13,17,13,10,13,14,16,92),Fe=Uint8Array.of(25,22,17,19,13,14,18,12,8,0,20,11,1,21,4,15,26,10,1,16,1,1,0,1,0,1,0,1,1,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,1,0,2,1,1,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,5,5,0,0,0,0,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,0,1,0,0,7,0,1,0,1,6,0,1,0,9,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,0,1,1,1,1,1,1,2,1,0,2,1,0,0,0,0,0,23,24,0,0,0,0,1,9,9,21,21,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1),Ce=Int32Array.of(0,0,0,0,0,0,0,0,0,0,0,0,-32,0,0,0,0,0,743,0,0,121,0,-1,0,-232,0,-300,195,0,0,0,0,0,0,0,97,0,0,163,0,130,0,0,0,0,56,0,-1,-2,-79,0,0,0,0,0,0,10815,0,0,0,10783,10780,10782,-210,-206,-205,-202,-203,42319,42315,-207,42280,42308,-209,-211,10743,42305,10749,-213,-214,10727,-218,42307,42282,-69,-217,-71,-219,42261,42258,0,0,84,0,0,0,0,0,-38,-37,-31,-64,-63,0,-62,-57,0,-47,-54,-8,-86,-80,7,-116,0,-96,0,0,0,0,-15,0,-48,0,0,3008,0,0,-6254,-6253,-6244,-6242,-6243,-6236,-6181,35266,0,35332,3814,35384,-59,0,8,0,74,86,100,128,112,126,0,9,0,0,-7205,0,0,0,0,0,0,0,0,0,0,0,-28,0,-16,0,-26,0,0,0,-10795,-10792,0,0,0,0,0,-7264,0,0,48,0,0,0,0,0,0,0,0,0,0,0,-928,-38864,0,-40,0,-34),Oe=Int32Array.of(0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,1,0,-199,0,-121,0,0,210,206,205,79,202,203,207,0,211,209,0,213,0,214,218,217,219,0,2,1,0,0,-97,-56,-130,10795,-163,10792,0,-195,69,71,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,38,37,64,63,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,-60,0,-7,80,0,15,0,48,0,0,7264,0,38864,0,0,0,0,0,0,0,0,0,-3008,0,0,0,0,-7615,0,-8,0,0,0,0,0,0,-8,0,-74,-9,0,-86,-100,-112,-128,-126,0,0,-7517,-8383,-8262,28,0,16,0,26,0,-10743,-3814,-10727,0,0,-10780,-10749,-10783,-10782,-10815,0,-35332,-42280,0,-42308,-42319,-42315,-42305,-42258,-42282,-42261,928,-48,-42307,-35384,0,0,40,0,34,0),xe=Int32Array.of(0,0,0,0,0,0,0,0,0,0,0,0,-32,0,0,0,0,0,743,0,0,121,0,-1,0,-232,0,-300,195,0,0,0,0,0,0,0,97,0,0,163,0,130,0,0,0,0,56,1,0,-1,-79,0,0,0,0,0,0,10815,0,0,0,10783,10780,10782,-210,-206,-205,-202,-203,42319,42315,-207,42280,42308,-209,-211,10743,42305,10749,-213,-214,10727,-218,42307,42282,-69,-217,-71,-219,42261,42258,0,0,84,0,0,0,0,0,-38,-37,-31,-64,-63,0,-62,-57,0,-47,-54,-8,-86,-80,7,-116,0,-96,0,0,0,0,-15,0,-48,0,0,0,0,0,-6254,-6253,-6244,-6242,-6243,-6236,-6181,35266,0,35332,3814,35384,-59,0,8,0,74,86,100,128,112,126,0,9,0,0,-7205,0,0,0,0,0,0,0,0,0,0,0,-28,0,-16,0,-26,0,0,0,-10795,-10792,0,0,0,0,0,-7264,0,0,48,0,0,0,0,0,0,0,0,0,0,0,-928,-38864,0,-40,0,-34);function Ve(t,e){const s=function t(e,s,i){const r=s+1==i,n=~~((s+i)/2);return e<Ae[n]?r?-1:t(e,s,n):e<=Ne[n]?n:r?-1:t(e,n,i)}(e,0,e+1);return-1==s?0:t[Pe[s]]}class De{constructor(t){Object.seal(this)}u_gencat(t){return Ve(Fe,t)}u_iswupper(t){return!!(1<<this.u_gencat(t)&5)}u_iswlower(t){return!!(1<<this.u_gencat(t)&2)}u_iswspace(t){return!!(1<<this.u_gencat(t)&4194304)}u_iswalpha(t){return!!(1<<this.u_gencat(t)&31)}u_iswdigit(t){return!!(1<<this.u_gencat(t)&256)}u_iswalnum(t){return!!(1<<this.u_gencat(t)&1823)}u_iswprint(t){return!!(1<<this.u_gencat(t)&8388607)}u_iswcntrl(t){return!!(1<<this.u_gencat(t)&33554432)}u_towlower(t){return t+Ve(Oe,t)}u_towupper(t){return t+Ve(Ce,t)}u_towtitle(t){return t+Ve(xe,t)}}function Re(t,e){const s=[];for(;e;){const i=(31&e)-1;if(!t[i])throw new WebAssembly.RuntimeError("decodeTys: unsupported tag "+e);s.push(t[i]),e>>>=5}return s}class ze{constructor(t,e,s,i,r){this.context=Object.freeze({memory:t,reentrancyGuard:e,symbolTable:s,scheduler:i,stablePtrManager:r,callbackStablePtrs:new Map,rtsMkFuncs:ne.map(t=>function(t,e){switch(e){case"JSVal":return e=>t.rts_mkJSVal(t.context.stablePtrManager.newJSVal(e));default:{const s="rts_mk"+e;return e=>t[s](e)}}}(this,t)),rtsGetFuncs:ne.map(t=>function(t,e){switch(e){case"JSVal":return e=>t.context.stablePtrManager.getJSVal(t.rts_getJSVal(e));default:{const s="rts_get"+e;return e=>t[s](e)}}}(this,t))})}rts_evalIO(t){return this.context.scheduler.submitCmdCreateThread("createStrictIOThread",t)}rts_evalLazyIO(t){return this.context.scheduler.submitCmdCreateThread("createIOThread",t)}newHaskellCallback(t,e,s,i,r){const n=Re(this.context.rtsMkFuncs,e),o=Re(this.context.rtsGetFuncs,s),a=this.context.symbolTable[i?"base_AsteriusziTopHandler_runIO_closure":"base_AsteriusziTopHandler_runNonIO_closure"],c=o.length?t=>this.rts_evalIO(t):t=>this.rts_evalLazyIO(t);if(o.length>1)throw new WebAssembly.RuntimeError("Multiple returns not supported");const u=async(...e)=>{try{if(e.length!==n.length)throw new WebAssembly.RuntimeError(`Expected ${n.length} arguments, got ${e.length}`);let s=this.context.stablePtrManager.deRefStablePtr(t);for(let t=0;t<e.length;++t)s=this.rts_apply(s,n[t](e[t]));s=this.rts_apply(a,s);const i=await c(s);if(o.length)return o[0](this.context.scheduler.getTSOret(i))}finally{r()}};return this.context.callbackStablePtrs.set(u,t),u}freeHaskellCallback(t){const e=this.context.stablePtrManager.getJSVal(t);this.context.stablePtrManager.freeStablePtr(this.context.callbackStablePtrs.get(e)),this.context.callbackStablePtrs.delete(e),this.context.stablePtrManager.freeJSVal(t)}}var Ue={Time:{getCPUTime:()=>{const t=performance.now(),e=Math.floor(t/1e3);return[e,1e6*Math.floor(t-1e3*e)]},getUnixEpochTime:()=>{const t=Date.now(),e=Math.floor(t/1e3);return[e,1e6*Math.floor(t-1e3*e)]},resolution:1e6},posix:class{get_errno(){throw WebAssembly.RuntimeError("Unsupported rts interface: get_errno")}set_errno(){throw WebAssembly.RuntimeError("Unsupported rts interface: set_errno")}open(){throw WebAssembly.RuntimeError("Unsupported rts interface: open")}close(){throw WebAssembly.RuntimeError("Unsupported rts interface: close")}stat(){throw WebAssembly.RuntimeError("Unsupported rts interface: stat")}fstat(){throw WebAssembly.RuntimeError("Unsupported rts interface: fstat")}opendir(){throw WebAssembly.RuntimeError("Unsupported rts interface: opendir")}readdir(){throw WebAssembly.RuntimeError("Unsupported rts interface: readdir")}closedir(){throw WebAssembly.RuntimeError("Unsupported rts interface: closedir")}getenv(){throw WebAssembly.RuntimeError("Unsupported rts interface: getenv")}access(){throw WebAssembly.RuntimeError("Unsupported rts interface: access")}getcwd(){throw WebAssembly.RuntimeError("Unsupported rts interface: getcwd")}}},We={jsffiFactory:t=>({jsffi:{__asterius_jsffi_basezuAsteriusziTypesziJSException_abX5B:e=>(e=t.getJSVal(e),t.newJSVal(e.stack?e.stack:""+e)),__asterius_jsffi_basezuAsteriusziTypesziJSString_abUNH:(e,s)=>(e=t.getJSVal(e))[0]+=String.fromCodePoint(s),__asterius_jsffi_basezuAsteriusziTypesziJSString_abUNL:()=>t.newJSVal([""]),__asterius_jsffi_basezuAsteriusziTypesziJSString_abUNR:e=>(e=t.getJSVal(e),(()=>{const t=e.next();return t.done?0:1+t.value.codePointAt(0)})()),__asterius_jsffi_basezuAsteriusziTypesziJSString_abUNX:e=>(e=t.getJSVal(e),t.newJSVal(e[Symbol.iterator]())),__asterius_jsffi_basezuAsteriusziTypesziJSString_abUNz:e=>(e=t.getJSVal(e),t.newJSVal(e[0])),__asterius_jsffi_basezuAsteriusziTypesziJSVal_abUbF:e=>t.freeJSVal(e)}}),exportsStatic:[["hsRunDynamic",9007160600073328,1062,1,!0]],symbolTable:Object.freeze({MainCapability:9007160600071984,barf:9007117650363329,base_AsteriusziTopHandler_runIO_closure:9007160600075792,base_AsteriusziTopHandler_runNonIO_closure:9007160600075920,base_AsteriusziTypesziJSException_mkJSException_closure:9007160600076624,base_GHCziPtr_Ptr_con_info:9007160600187440,ghczmprim_GHCziTypes_Czh_con_info:9007160600285536,ghczmprim_GHCziTypes_Dzh_con_info:9007160600285568,ghczmprim_GHCziTypes_False_closure:9007160600285648,ghczmprim_GHCziTypes_Izh_con_info:9007160600285744,ghczmprim_GHCziTypes_True_closure:9007160600286096,ghczmprim_GHCziTypes_Wzh_con_info:9007160600286176,ghczmprim_GHCziTypes_ZC_con_info:9007160600286208,ghczmprim_GHCziTypes_ZMZN_closure:9007160600286240,stg_ARR_WORDS_info:9007160600301712,stg_BLACKHOLE_info:9007160600301744,stg_DEAD_WEAK_info:9007160600305968,stg_IND_info:9007160600306080,stg_NO_FINALIZER_closure:9007160600306960,stg_STABLE_NAME_info:9007160600307344,stg_WEAK_info:9007160600307440,stg_WHITEHOLE_info:9007160600307472,stg_marked_upd_frame_info:9007160600308656,stg_raise_info:9007160600308784,stg_raise_ret_info:9007160600308816}),sptEntries:new Map([]),tableSlots:6366,staticMBlocks:1,yolo:!1,consoleHistory:!1,gcThreshold:64,targetSpecificModule:Ue},je=s.p+"a508b71cf8ae551b90ef298bf6e6560e.wasm";let He=WebAssembly.compileStreaming(fetch(je)).then(t=>async function(t){let e=t.persistentState?t.persistentState:{},s=new n(["Scheduler","GC"]),o=new a(t.symbolTable),u=new c(o,t.symbolTable),h=null,l=new WebAssembly.Table({element:"anyfunc",initial:t.tableSlots}),f=new WebAssembly.Memory({initial:t.staticMBlocks*(m/65536)}),g=new ae,d=new ce(o,t.symbolTable,g),b=new ue(g),y=new he,_=new le(g,b,t.symbolTable),p=new fe(g,y,t.sptEntries),S=new Se(t.consoleHistory),T=new be(g,t.symbolTable,y,S),I=new _e,w=new Te(null),B=new Ie(g),v=new we(g,t.targetSpecificModule),L=new Le(g,b,y,_,T,t.infoTables,t.symbolTable,s,t.yolo,t.gcThreshold),k=new Me(g),E=new Ee(g,S),M=new De,A=new ze(g,s,t.symbolTable,T,y),N=new ke(g,b,A,t.infoTables,t.symbolTable);T.exports=A;const P=await async function(){try{return}catch(t){return}}(),F={exposeMemory:(t,e,s=Uint8Array)=>g.expose(t,e,s),newJSVal:t=>y.newJSVal(t),getJSVal:t=>y.getJSVal(t),freeJSVal:t=>y.freeJSVal(t),fs:S,stdio:{stdout:()=>S.readSync(1),stderr:()=>S.readSync(2)},returnFFIPromise:t=>T.returnFFIPromise(t)},C=Object.assign(t.jsffiFactory(F),{Math:Math,WasmTable:{table:l},WasmMemory:{memory:f},rts:{printI64:t=>S.writeSync(1,function(t){return"0x"+t.toString(16).padStart(8,"0")}(t)+"\n"),assertEqI64:function(t,e){if(t!=e)throw new WebAssembly.RuntimeError(`unequal I64: ${t}, ${e}`)},print:t=>S.writeSync(1,t+"\n")},fs:{read:(t,e,s)=>{const i=ae.unTag(e);return P.fs.readSync(t,g.i8View,i,s,null)},write:(t,e,s)=>{const i=ae.unTag(e);return(t<=2?S:P.fs).writeSync(t,g.i8View.subarray(i,i+s))}},posix:r(new t.targetSpecificModule.posix(g,i)),bytestring:r(w),text:r(B),time:r(v),floatCBits:r(k),GC:r(L),ExceptionHelper:r(N),HeapAlloc:r(b),Integer:r(I),Memory:r(g),MemoryTrap:r(d),Messages:r(E),StablePtr:r(y),StableName:r(_),StaticPtr:r(p),Unicode:r(M),Tracing:r(u),Exports:{newHaskellCallback:(t,e,s,i,r)=>{let n=[],o=A.newHaskellCallback(t,e,s,i,r?()=>A.freeHaskellCallback(n[0]):()=>{});return n[0]=y.newJSVal(o),n[0]},freeHaskellCallback:t=>A.freeHaskellCallback(t)},Scheduler:r(T)});return WebAssembly.instantiate(t.module,C).then(s=>{h=s,g.init(f,t.staticMBlocks),b.init(),w.memory=g,T.setGC(L);for(const[e,s,i,r,n]of t.exportsStatic)A[e]=A.newHaskellCallback(y.newStablePtr(s),i,r,n,()=>{});return Object.assign(A,h.exports),A.hs_init(),Object.assign(F,{exports:A,symbolTable:t.symbolTable,persistentState:e})})}(Object.assign(We,{module:t}))).catch(t=>console.error(t));onmessage=function(t){let{data:e}=t,{input:s,program:i,len:r}=e;He.then(t=>t.exports.hsRunDynamic(r,i,s)).then(t=>{postMessage({good:!0,out:t})}).catch(t=>{postMessage({good:!1,err:"FRACTRAN engine error, likely it detected an infinite loop in your FRACTRAN code."})}).then(close)}}]);
//# sourceMappingURL=72ac26b04c598460cfc5.worker.js.map